[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 bolasso authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Molitor. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Molitor D (2021). bolasso: Model Consistent Lasso Estimation Bootstrap. R package version 0.0.3.","code":"@Manual{,   title = {bolasso: Model Consistent Lasso Estimation through the Bootstrap},   author = {Daniel Molitor},   year = {2021},   note = {R package version 0.0.3}, }"},{"path":"/index.html","id":"bolasso-","dir":"","previous_headings":"","what":"Model Consistent Lasso Estimation through the Bootstrap","title":"Model Consistent Lasso Estimation through the Bootstrap","text":"goal bolasso implement model-consistent Lasso estimation via bootstrap [1].","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Model Consistent Lasso Estimation through the Bootstrap","text":"can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"dmolitor/bolasso\")"},{"path":"/index.html","id":"variable-selection-with-bolasso","dir":"","previous_headings":"","what":"Variable selection with bolasso","title":"Model Consistent Lasso Estimation through the Bootstrap","text":"illustrate usage bolasso, ’ll use Pima Indians Diabetes dataset determine factors important predictors testing positive diabetes. full description input variables, see link .","code":""},{"path":"/index.html","id":"load-requisite-packages-and-data","dir":"","previous_headings":"Variable selection with bolasso","what":"Load requisite packages and data","title":"Model Consistent Lasso Estimation through the Bootstrap","text":"First, run 100-fold bootstrapped Lasso glmnet implementation. can get rough estimate elapsed time using system.time(). can get quick overview model printing bolasso object.","code":"library(bolasso)  data(PimaIndiansDiabetes, package = \"mlbench\")  # Quick overview of the dataset str(PimaIndiansDiabetes) #> 'data.frame':    768 obs. of  9 variables: #>  $ pregnant: num  6 1 8 1 0 5 3 10 2 8 ... #>  $ glucose : num  148 85 183 89 137 116 78 115 197 125 ... #>  $ pressure: num  72 66 64 66 40 74 50 0 70 96 ... #>  $ triceps : num  35 29 0 23 35 0 32 0 45 0 ... #>  $ insulin : num  0 0 0 94 168 0 88 0 543 0 ... #>  $ mass    : num  33.6 26.6 23.3 28.1 43.1 25.6 31 35.3 30.5 0 ... #>  $ pedigree: num  0.627 0.351 0.672 0.167 2.288 ... #>  $ age     : num  50 31 32 21 33 30 26 29 53 54 ... #>  $ diabetes: Factor w/ 2 levels \"neg\",\"pos\": 2 1 2 1 2 1 2 1 2 2 ... system.time({   model <- bolasso(     diabetes ~ .,     data = PimaIndiansDiabetes,     n.boot = 100,      implement = \"glmnet\",     family = \"binomial\"   ) }) #> Loaded glmnet 4.1-3 #>    user  system elapsed  #>   19.94    0.11   20.25 model #> ------------- 100-fold bootstrapped Lasso ------------- #>  #> Model matrix dimensions: #>    - 8 Predictors #>    - 768 Observations #>  #> Selected variables: #>    - 6/8 predictors selected with 90% threshold #>    - 4/8 predictors selected with 100% threshold"},{"path":"/index.html","id":"extracting-selected-variables","dir":"","previous_headings":"Variable selection with bolasso","what":"Extracting selected variables","title":"Model Consistent Lasso Estimation through the Bootstrap","text":"Next, can extract variables selected 90% 100% bootstrapped Lasso models. can also pass relevant arguments predict cv.glmnet cv.gamlr model objects. case use lambda value minimizes OOS error.","code":"selected_vars(model,               threshold = 0.9,               select = \"lambda.min\") #> # A tibble: 7 x 2 #>   variable  mean_coef #>   <chr>         <dbl> #> 1 Intercept   -8.15   #> 2 pregnant     0.119  #> 3 glucose      0.0348 #> 4 pressure    -0.0113 #> 5 mass         0.0821 #> 6 pedigree     0.849  #> 7 age          0.0138  selected_vars(model,               threshold = 1,               select = \"lambda.min\") #> # A tibble: 5 x 2 #>   variable  mean_coef #>   <chr>         <dbl> #> 1 Intercept   -8.15   #> 2 pregnant     0.119  #> 3 glucose      0.0348 #> 4 mass         0.0821 #> 5 pedigree     0.849"},{"path":"/index.html","id":"plotting-selected-variables","dir":"","previous_headings":"Variable selection with bolasso","what":"Plotting selected variables","title":"Model Consistent Lasso Estimation through the Bootstrap","text":"can also quickly plot selected variables 90% 100% threshold values.","code":"plot(model, threshold = 0.9) plot(model, threshold = 1)"},{"path":"/index.html","id":"parallelizing-bolasso","dir":"","previous_headings":"Variable selection with bolasso","what":"Parallelizing bolasso","title":"Model Consistent Lasso Estimation through the Bootstrap","text":"can execute bolasso parallel via future package. can copy code one minor tweak shown . can now run code , unaltered, execute parallel.","code":"future::plan(\"multisession\") system.time({   model <- bolasso(     diabetes ~ .,     data = PimaIndiansDiabetes,     n.boot = 100,      implement = \"glmnet\",     family = \"binomial\"   ) }) #>    user  system elapsed  #>    0.13    0.06    5.53"},{"path":"/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Model Consistent Lasso Estimation through the Bootstrap","text":"[1] Bach, Francis. “Bolasso: Model Consistent Lasso Estimation Bootstrap.” ArXiv:0804.1302 [Cs, Math, Stat], April 8, 2008. http://arxiv.org/abs/0804.1302.","code":""},{"path":"/reference/bolasso.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootsrap-enhanced Lasso — bolasso","title":"Bootsrap-enhanced Lasso — bolasso","text":"function implements model-consistent Lasso estimation bootstrap. supports parallel processing way future package, allowing user flexibly specify many parallelization methods. method developed variable-selection algorithm, package also supports making ensemble predictions new data using bagged Lasso models.","code":""},{"path":"/reference/bolasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootsrap-enhanced Lasso — bolasso","text":"","code":"bolasso(   form,   data,   n.boot = 100,   progress = TRUE,   implement = \"glmnet\",   x = NULL,   y = NULL,   ... )"},{"path":"/reference/bolasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootsrap-enhanced Lasso — bolasso","text":"form optional object class formula (one can coerced class): symbolic description model fitted. Can omitted x y non-missing. data optional object class data.frame contains modeling variables referenced form. Can omitted x y non-missing. n.boot integer specifying number bootstrap replicates. progress boolean indicating whether display progress across bootstrap folds. implement character; either 'glmnet' 'gamlr', specifying Lasso implementation utilize. specific modeling details, see glmnet::cv.glmnet gamlr::cv.gamlr. x optional predictor matrix lieu form data. y optional response vector lieu form data. ... Additional parameters pass either glmnet::cv.glmnet gamlr::cv.gamlr.","code":""},{"path":"/reference/bolasso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootsrap-enhanced Lasso — bolasso","text":"object class bolasso. object list length n.boot cv.glmnet cv.gamlr objects.","code":""},{"path":"/reference/bolasso.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bootsrap-enhanced Lasso — bolasso","text":"Bach FR (2008). “Bolasso: model consistent Lasso estimation bootstrap.” CoRR, abs/0804.1302. 0804.1302, http://arxiv.org/abs/0804.1302.","code":""},{"path":[]},{"path":"/reference/bolasso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootsrap-enhanced Lasso — bolasso","text":"","code":"mtcars[, c(2, 10:11)] <- lapply(mtcars[, c(2, 10:11)], as.factor) idx <- sample(nrow(mtcars), 22) mtcars_train <- mtcars[idx, ] mtcars_test <- mtcars[-idx, ]  ## Formula Interface  # Train model set.seed(123) bolasso_form <- bolasso(   form = mpg ~ .,   data = mtcars_train,   n.boot = 20,   nfolds = 5,   implement = \"glmnet\" ) #> Loaded glmnet 4.1-3  # Extract selected variables selected_vars(bolasso_form, threshold = 0.9, select = \"lambda.min\") #> # A tibble: 1 × 2 #>   variable  mean_coef #>   <chr>         <dbl> #> 1 Intercept      21.3  # Bagged ensemble prediction on test data predict(bolasso_form,         new.data = mtcars_test,         select = \"lambda.min\") #>                         boot1    boot2     boot3    boot4     boot5    boot6 #> Mazda RX4           23.634490 19.46660 23.296169 20.56045 21.677787 18.51405 #> Mazda RX4 Wag       21.759530 19.26401 22.570195 20.28997 20.796195 18.11381 #> Merc 230            19.949583 25.00192 22.993488 21.85809 22.031604 22.60310 #> Merc 450SE          14.061720 17.32012 14.736112 16.24978 14.891545 15.15425 #> Cadillac Fleetwood   3.657769 14.69768 10.404302 13.56352  9.415715 12.91504 #> Lincoln Continental  2.083518 14.66249  9.560039 13.36735  8.701481 12.48709 #> Honda Civic         32.261736 26.78052 31.015617 25.71117 28.397999 25.67822 #> Toyota Corolla      33.378988 26.64524 28.374035 25.39437 27.436726 25.13162 #> Pontiac Firebird    12.480466 16.43225 17.112815 15.75973 15.143321 15.58482 #> Maserati Bora       11.670668 17.50094 12.903572 16.73753 13.832950 16.54293 #>                         boot7    boot8    boot9    boot10   boot11   boot12 #> Mazda RX4           34.859714 20.76775 13.94173 20.099603 20.82233 21.03660 #> Mazda RX4 Wag       31.828643 22.97999 13.94173 18.564172 21.39068 21.03660 #> Merc 230            13.558236 39.90981 22.67618 24.778018 29.94412 23.42378 #> Merc 450SE          12.278013 14.58890 15.88135 15.212310 16.65399 17.12126 #> Cadillac Fleetwood   1.118233 12.46900 13.64593  6.650690 14.96588 15.00030 #> Lincoln Continental -2.691499 12.75933 13.68024  5.405353 14.80349 14.90787 #> Honda Civic         45.748121 42.91090 23.72618 32.063378 31.97065 27.45300 #> Toyota Corolla      37.188355 35.40062 23.65791 27.904968 30.90393 25.73329 #> Pontiac Firebird    24.697402 16.36203 14.65126 16.037816 17.99115 17.25733 #> Maserati Bora       -2.499668 16.08049 15.96478 12.181541 19.50916 15.47433 #>                       boot13   boot14   boot15   boot16   boot17    boot18 #> Mazda RX4           19.25972 23.42131 21.03323 21.65285 21.09482 23.370558 #> Mazda RX4 Wag       18.93583 23.34711 20.58433 21.01387 20.60457 22.272929 #> Merc 230            23.96029 22.55895 21.45382 20.81391 23.04185 20.529456 #> Merc 450SE          14.59418 17.46229 18.04171 15.63514 16.81188 14.603523 #> Cadillac Fleetwood  13.07610 15.69865 15.80769 11.83318 14.00928  7.451267 #> Lincoln Continental 12.85509 15.07990 15.43867 11.05912 13.46115  6.606850 #> Honda Civic         25.90994 28.43412 24.42565 26.13187 26.91145 29.105203 #> Toyota Corolla      23.60458 27.63156 23.95685 25.14113 26.21080 27.973030 #> Pontiac Firebird    16.90589 17.81182 18.46915 16.36797 17.35125 14.385401 #> Maserati Bora       16.31376 11.78768 17.94995 12.58402 14.46218 14.434864 #>                        boot19    boot20 #> Mazda RX4           23.326044 19.963582 #> Mazda RX4 Wag       21.932690 19.463530 #> Merc 230            21.105021 27.853275 #> Merc 450SE          13.781404 14.542168 #> Cadillac Fleetwood   5.599487  9.563645 #> Lincoln Continental  4.475102  8.551324 #> Honda Civic         30.542381 29.614284 #> Toyota Corolla      29.114558 31.300915 #> Pontiac Firebird    13.797473 14.154015 #> Maserati Bora       13.200197 14.713361  ## Alternal Matrix Interface  # Train model set.seed(123) bolasso_mat <- bolasso(   x = model.matrix(mpg ~ . - 1, mtcars_train),   y = mtcars_train[, 1],   data = mtcars_train,   n.boot = 20,   nfolds = 5,   implement = \"glmnet\" )  # Extract selected variables selected_vars(bolasso_mat, threshold = 0.9, select = \"lambda.min\") #> # A tibble: 1 × 2 #>   variable  mean_coef #>   <chr>         <dbl> #> 1 Intercept      21.3  # Bagged ensemble prediction on test data predict(bolasso_mat,         new.data = model.matrix(mpg ~ . - 1, mtcars_test),         select = \"lambda.min\") #>                         boot1    boot2     boot3    boot4     boot5    boot6 #> Mazda RX4           23.634490 19.46660 23.296169 20.56045 21.677787 18.51405 #> Mazda RX4 Wag       21.759530 19.26401 22.570195 20.28997 20.796195 18.11381 #> Merc 230            19.949583 25.00192 22.993488 21.85809 22.031604 22.60310 #> Merc 450SE          14.061720 17.32012 14.736112 16.24978 14.891545 15.15425 #> Cadillac Fleetwood   3.657769 14.69768 10.404302 13.56352  9.415715 12.91504 #> Lincoln Continental  2.083518 14.66249  9.560039 13.36735  8.701481 12.48709 #> Honda Civic         32.261736 26.78052 31.015617 25.71117 28.397999 25.67822 #> Toyota Corolla      33.378988 26.64524 28.374035 25.39437 27.436726 25.13162 #> Pontiac Firebird    12.480466 16.43225 17.112815 15.75973 15.143321 15.58482 #> Maserati Bora       11.670668 17.50094 12.903572 16.73753 13.832950 16.54293 #>                         boot7    boot8    boot9    boot10   boot11   boot12 #> Mazda RX4           34.859714 20.76775 13.94173 20.099603 20.82233 21.03660 #> Mazda RX4 Wag       31.828643 22.97999 13.94173 18.564172 21.39068 21.03660 #> Merc 230            13.558236 39.90981 22.67618 24.778018 29.94412 23.42378 #> Merc 450SE          12.278013 14.58890 15.88135 15.212310 16.65399 17.12126 #> Cadillac Fleetwood   1.118233 12.46900 13.64593  6.650690 14.96588 15.00030 #> Lincoln Continental -2.691499 12.75933 13.68024  5.405353 14.80349 14.90787 #> Honda Civic         45.748121 42.91090 23.72618 32.063378 31.97065 27.45300 #> Toyota Corolla      37.188355 35.40062 23.65791 27.904968 30.90393 25.73329 #> Pontiac Firebird    24.697402 16.36203 14.65126 16.037816 17.99115 17.25733 #> Maserati Bora       -2.499668 16.08049 15.96478 12.181541 19.50916 15.47433 #>                       boot13   boot14   boot15   boot16   boot17    boot18 #> Mazda RX4           19.25972 23.42131 21.03323 21.65285 21.09482 23.370558 #> Mazda RX4 Wag       18.93583 23.34711 20.58433 21.01387 20.60457 22.272929 #> Merc 230            23.96029 22.55895 21.45382 20.81391 23.04185 20.529456 #> Merc 450SE          14.59418 17.46229 18.04171 15.63514 16.81188 14.603523 #> Cadillac Fleetwood  13.07610 15.69865 15.80769 11.83318 14.00928  7.451267 #> Lincoln Continental 12.85509 15.07990 15.43867 11.05912 13.46115  6.606850 #> Honda Civic         25.90994 28.43412 24.42565 26.13187 26.91145 29.105203 #> Toyota Corolla      23.60458 27.63156 23.95685 25.14113 26.21080 27.973030 #> Pontiac Firebird    16.90589 17.81182 18.46915 16.36797 17.35125 14.385401 #> Maserati Bora       16.31376 11.78768 17.94995 12.58402 14.46218 14.434864 #>                        boot19    boot20 #> Mazda RX4           23.326044 19.963582 #> Mazda RX4 Wag       21.932690 19.463530 #> Merc 230            21.105021 27.853275 #> Merc 450SE          13.781404 14.542168 #> Cadillac Fleetwood   5.599487  9.563645 #> Lincoln Continental  4.475102  8.551324 #> Honda Civic         30.542381 29.614284 #> Toyota Corolla      29.114558 31.300915 #> Pontiac Firebird    13.797473 14.154015 #> Maserati Bora       13.200197 14.713361"},{"path":"/reference/selected_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Bolasso-selected Variables — selected_vars","title":"Bolasso-selected Variables — selected_vars","text":"Identifies independent variables selected Bolasso algorithm least fraction time specified user-defined threshold. typical value threshold 0.9 typically lower .","code":""},{"path":"/reference/selected_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bolasso-selected Variables — selected_vars","text":"","code":"selected_vars(object, threshold = 0.9, summarise = TRUE, ...)"},{"path":"/reference/selected_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bolasso-selected Variables — selected_vars","text":"object object class bolasso. threshold numeric 0 1, specifying fraction bootstrap replicates Lasso must select variable considered selected variable. summarise Boolean indicator FALSE indicates returning full set coefficients selected variable/bootstrap replicate level TRUE indicates taking average variable's coefficient across bootstrap replicates. default value TRUE efficient interpretable. ... Additional arguments pass predict objects class cv.glmnet cv.gamlr.","code":""},{"path":"/reference/selected_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bolasso-selected Variables — selected_vars","text":"tibble selected variable respective coefficient bootstrap replicate.","code":""},{"path":[]}]
