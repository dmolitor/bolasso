[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 bolasso authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Molitor. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Molitor D (2021). bolasso: Model Consistent Lasso Estimation Bootstrap. R package version 0.0.3, https://dmolitor.github.io/bolasso/.","code":"@Manual{,   title = {bolasso: Model Consistent Lasso Estimation Through the Bootstrap},   author = {Daniel Molitor},   year = {2021},   note = {R package version 0.0.3},   url = {https://dmolitor.github.io/bolasso/}, }"},{"path":"/index.html","id":"bolasso-","dir":"","previous_headings":"","what":"Model Consistent Lasso Estimation Through the Bootstrap","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"goal bolasso implement model-consistent Lasso estimation via bootstrap [1].","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"dmolitor/bolasso\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"illustrate usage bolasso, ’ll use Pima Indians Diabetes dataset determine factors important predictors testing positive diabetes. full description input variables, see link .","code":""},{"path":"/index.html","id":"load-requisite-packages-and-data","dir":"","previous_headings":"Usage","what":"Load requisite packages and data","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"First, run 100-fold bootstrapped Lasso glmnet implementation. can get rough estimate elapsed time using system.time(). can get quick overview model printing bolasso object.","code":"library(bolasso)  data(PimaIndiansDiabetes, package = \"mlbench\")  # Quick overview of the dataset str(PimaIndiansDiabetes) #> 'data.frame':    768 obs. of  9 variables: #>  $ pregnant: num  6 1 8 1 0 5 3 10 2 8 ... #>  $ glucose : num  148 85 183 89 137 116 78 115 197 125 ... #>  $ pressure: num  72 66 64 66 40 74 50 0 70 96 ... #>  $ triceps : num  35 29 0 23 35 0 32 0 45 0 ... #>  $ insulin : num  0 0 0 94 168 0 88 0 543 0 ... #>  $ mass    : num  33.6 26.6 23.3 28.1 43.1 25.6 31 35.3 30.5 0 ... #>  $ pedigree: num  0.627 0.351 0.672 0.167 2.288 ... #>  $ age     : num  50 31 32 21 33 30 26 29 53 54 ... #>  $ diabetes: Factor w/ 2 levels \"neg\",\"pos\": 2 1 2 1 2 1 2 1 2 2 ... system.time({   model <- bolasso(     diabetes ~ .,     data = PimaIndiansDiabetes,     n.boot = 100,      implement = \"glmnet\",     family = \"binomial\"   ) }) #> Loaded glmnet 4.1-3 #>    user  system elapsed  #>   42.32    0.11   43.00 model #> ------------- 100-fold bootstrapped Lasso ------------- #>  #> Model matrix dimensions: #>    - 8 Predictors #>    - 768 Observations #>  #> Selected variables: #>    - 6/8 predictors selected with 90% threshold #>    - 4/8 predictors selected with 100% threshold"},{"path":"/index.html","id":"extracting-selected-variables","dir":"","previous_headings":"Usage","what":"Extracting selected variables","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"Next, can extract variables selected 90% 100% bootstrapped Lasso models. can also pass relevant arguments predict cv.glmnet cv.gamlr model objects. case use lambda value minimizes OOS error.","code":"selected_vars(model,               threshold = 0.9,               select = \"lambda.min\") #> # A tibble: 7 x 2 #>   variable  mean_coef #>   <chr>         <dbl> #> 1 Intercept   -8.15   #> 2 pregnant     0.119  #> 3 glucose      0.0348 #> 4 pressure    -0.0113 #> 5 mass         0.0821 #> 6 pedigree     0.849  #> 7 age          0.0138  selected_vars(model,               threshold = 1,               select = \"lambda.min\") #> # A tibble: 5 x 2 #>   variable  mean_coef #>   <chr>         <dbl> #> 1 Intercept   -8.15   #> 2 pregnant     0.119  #> 3 glucose      0.0348 #> 4 mass         0.0821 #> 5 pedigree     0.849"},{"path":"/index.html","id":"plotting-selected-variables","dir":"","previous_headings":"Usage","what":"Plotting selected variables","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"can also quickly plot selected variables 90% 100% threshold values.","code":"plot(model, threshold = 0.9) plot(model, threshold = 1)"},{"path":"/index.html","id":"parallelizing-bolasso","dir":"","previous_headings":"Usage","what":"Parallelizing bolasso","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"can execute bolasso parallel via future package. can copy code one minor tweak shown . can now run code , unaltered, execute parallel.","code":"future::plan(\"multisession\") system.time({   model <- bolasso(     diabetes ~ .,     data = PimaIndiansDiabetes,     n.boot = 100,      implement = \"glmnet\",     family = \"binomial\"   ) }) #>    user  system elapsed  #>    0.17    0.02    5.56"},{"path":"/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"[1] Bach, Francis. “Bolasso: Model Consistent Lasso Estimation Bootstrap.” ArXiv:0804.1302 [Cs, Math, Stat], April 8, 2008. https://arxiv.org/abs/0804.1302.","code":""},{"path":"/reference/bolasso.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootsrap-enhanced Lasso — bolasso","title":"Bootsrap-enhanced Lasso — bolasso","text":"function implements model-consistent Lasso estimation bootstrap. supports parallel processing way future package, allowing user flexibly specify many parallelization methods. method developed variable-selection algorithm, package also supports making ensemble predictions new data using bagged Lasso models.","code":""},{"path":"/reference/bolasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootsrap-enhanced Lasso — bolasso","text":"","code":"bolasso(   form,   data,   n.boot = 100,   progress = TRUE,   implement = \"glmnet\",   x = NULL,   y = NULL,   ... )"},{"path":"/reference/bolasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootsrap-enhanced Lasso — bolasso","text":"form optional object class formula (one can coerced class): symbolic description model fitted. Can omitted x y non-missing. data optional object class data.frame contains modeling variables referenced form. Can omitted x y non-missing. n.boot integer specifying number bootstrap replicates. progress boolean indicating whether display progress across bootstrap folds. implement character; either 'glmnet' 'gamlr', specifying Lasso implementation utilize. specific modeling details, see glmnet::cv.glmnet gamlr::cv.gamlr. x optional predictor matrix lieu form data. y optional response vector lieu form data. ... Additional parameters pass either glmnet::cv.glmnet gamlr::cv.gamlr.","code":""},{"path":"/reference/bolasso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootsrap-enhanced Lasso — bolasso","text":"object class bolasso. object list length n.boot cv.glmnet cv.gamlr objects.","code":""},{"path":"/reference/bolasso.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bootsrap-enhanced Lasso — bolasso","text":"Bach FR (2008). “Bolasso: model consistent Lasso estimation bootstrap.” CoRR, abs/0804.1302. 0804.1302, https://arxiv.org/abs/0804.1302.","code":""},{"path":[]},{"path":"/reference/bolasso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootsrap-enhanced Lasso — bolasso","text":"","code":"mtcars[, c(2, 10:11)] <- lapply(mtcars[, c(2, 10:11)], as.factor) idx <- sample(nrow(mtcars), 22) mtcars_train <- mtcars[idx, ] mtcars_test <- mtcars[-idx, ]  ## Formula Interface  # Train model set.seed(123) bolasso_form <- bolasso(   form = mpg ~ .,   data = mtcars_train,   n.boot = 20,   nfolds = 5,   implement = \"glmnet\" ) #> Loaded glmnet 4.1-3  # Extract selected variables selected_vars(bolasso_form, threshold = 0.9, select = \"lambda.min\") #> # A tibble: 2 × 2 #>   variable  mean_coef #>   <chr>         <dbl> #> 1 Intercept      1.64 #> 2 wt            -2.03  # Bagged ensemble prediction on test data predict(bolasso_form,         new.data = mtcars_test,         select = \"lambda.min\") #>                      boot1    boot2    boot3    boot4    boot5    boot6 #> Mazda RX4         27.30108 19.55748 18.86818 27.33368 20.01937 22.55160 #> Mazda RX4 Wag     28.84407 19.87669 19.54519 26.90695 20.35093 22.48992 #> Hornet 4 Drive    18.04460 17.07451 21.21822 18.75059 18.15604 18.05761 #> Valiant           19.42097 16.71314 19.79784 18.63613 17.43208 18.17011 #> Merc 230          30.93987 29.33743 30.14795 27.87086 28.32019 26.84653 #> Merc 450SL        16.09559 14.94398 16.23420 16.40156 15.96032 17.08967 #> Chrysler Imperial 16.84525 10.70768 12.11024 11.20229 12.28222 11.36773 #> Dodge Challenger  18.44248 13.15442 15.61173 16.59254 14.21728 17.03976 #> Lotus Europa      18.53760 24.93065 21.60473 22.89581 21.24979 27.06231 #> Volvo 142E        24.80737 26.04855 29.18683 28.19066 25.80991 28.18690 #>                       boot7    boot8    boot9   boot10   boot11   boot12 #> Mazda RX4          7.173597 24.37747 25.68187 20.34458 21.67765 19.95889 #> Mazda RX4 Wag     10.135256 23.84963 25.12290 20.00407 21.52916 19.71204 #> Hornet 4 Drive    16.167026 19.08213 20.93182 20.13402 19.90093 20.24742 #> Valiant            9.966407 18.47625 20.61317 19.01512 19.54792 19.58109 #> Merc 230          46.444186 21.83329 21.97090 24.14943 27.10019 26.65045 #> Merc 450SL        14.317964 15.71427 16.98680 17.66261 15.88451 15.70857 #> Chrysler Imperial 16.497036 10.86427 11.26272 10.89140 10.55814 10.67613 #> Dodge Challenger   6.129797 16.97831 18.75750 17.77744 15.68901 16.78866 #> Lotus Europa      10.970837 25.52578 28.21882 24.56865 27.02121 26.33749 #> Volvo 142E        36.330887 24.50021 25.61623 24.65023 25.47887 25.01095 #>                     boot13    boot14   boot15   boot16   boot17   boot18 #> Mazda RX4         21.07500 21.973744 21.87521 22.25342 21.96200 22.21354 #> Mazda RX4 Wag     20.80065 20.821554 21.50177 21.74571 21.71778 21.45817 #> Hornet 4 Drive    20.58222 20.349787 21.54436 17.08875 19.60526 21.13260 #> Valiant           20.55141 18.690524 21.07824 16.65019 19.06443 20.53512 #> Merc 230          27.76152 21.654221 26.21864 24.63166 25.76915 22.18598 #> Merc 450SL        17.16985 16.192894 16.87999 15.37412 15.68601 17.81127 #> Chrysler Imperial 10.40530  6.047878 10.40175 10.86645 10.31478 10.57517 #> Dodge Challenger  16.21480 16.865940 17.07459 16.08763 15.16975 19.67899 #> Lotus Europa      28.85082 27.452592 25.94803 25.67744 26.52092 27.06121 #> Volvo 142E        27.70860 23.174039 23.62983 26.60231 24.80764 23.41070 #>                     boot19   boot20 #> Mazda RX4         24.08124 23.20341 #> Mazda RX4 Wag     24.17197 23.23430 #> Hornet 4 Drive    20.20774 19.53153 #> Valiant           20.63196 19.89219 #> Merc 230          24.23999 27.66367 #> Merc 450SL        16.18159 15.17728 #> Chrysler Imperial 13.77349 10.33199 #> Dodge Challenger  18.90784 17.33990 #> Lotus Europa      25.69091 27.27966 #> Volvo 142E        27.33689 27.57869  ## Alternal Matrix Interface  # Train model set.seed(123) bolasso_mat <- bolasso(   x = model.matrix(mpg ~ . - 1, mtcars_train),   y = mtcars_train[, 1],   data = mtcars_train,   n.boot = 20,   nfolds = 5,   implement = \"glmnet\" )  # Extract selected variables selected_vars(bolasso_mat, threshold = 0.9, select = \"lambda.min\") #> # A tibble: 2 × 2 #>   variable  mean_coef #>   <chr>         <dbl> #> 1 Intercept      1.64 #> 2 wt            -2.03  # Bagged ensemble prediction on test data predict(bolasso_mat,         new.data = model.matrix(mpg ~ . - 1, mtcars_test),         select = \"lambda.min\") #>                      boot1    boot2    boot3    boot4    boot5    boot6 #> Mazda RX4         27.30108 19.55748 18.86818 27.33368 20.01937 22.55160 #> Mazda RX4 Wag     28.84407 19.87669 19.54519 26.90695 20.35093 22.48992 #> Hornet 4 Drive    18.04460 17.07451 21.21822 18.75059 18.15604 18.05761 #> Valiant           19.42097 16.71314 19.79784 18.63613 17.43208 18.17011 #> Merc 230          30.93987 29.33743 30.14795 27.87086 28.32019 26.84653 #> Merc 450SL        16.09559 14.94398 16.23420 16.40156 15.96032 17.08967 #> Chrysler Imperial 16.84525 10.70768 12.11024 11.20229 12.28222 11.36773 #> Dodge Challenger  18.44248 13.15442 15.61173 16.59254 14.21728 17.03976 #> Lotus Europa      18.53760 24.93065 21.60473 22.89581 21.24979 27.06231 #> Volvo 142E        24.80737 26.04855 29.18683 28.19066 25.80991 28.18690 #>                       boot7    boot8    boot9   boot10   boot11   boot12 #> Mazda RX4          7.173597 24.37747 25.68187 20.34458 21.67765 19.95889 #> Mazda RX4 Wag     10.135256 23.84963 25.12290 20.00407 21.52916 19.71204 #> Hornet 4 Drive    16.167026 19.08213 20.93182 20.13402 19.90093 20.24742 #> Valiant            9.966407 18.47625 20.61317 19.01512 19.54792 19.58109 #> Merc 230          46.444186 21.83329 21.97090 24.14943 27.10019 26.65045 #> Merc 450SL        14.317964 15.71427 16.98680 17.66261 15.88451 15.70857 #> Chrysler Imperial 16.497036 10.86427 11.26272 10.89140 10.55814 10.67613 #> Dodge Challenger   6.129797 16.97831 18.75750 17.77744 15.68901 16.78866 #> Lotus Europa      10.970837 25.52578 28.21882 24.56865 27.02121 26.33749 #> Volvo 142E        36.330887 24.50021 25.61623 24.65023 25.47887 25.01095 #>                     boot13    boot14   boot15   boot16   boot17   boot18 #> Mazda RX4         21.07500 21.973744 21.87521 22.25342 21.96200 22.21354 #> Mazda RX4 Wag     20.80065 20.821554 21.50177 21.74571 21.71778 21.45817 #> Hornet 4 Drive    20.58222 20.349787 21.54436 17.08875 19.60526 21.13260 #> Valiant           20.55141 18.690524 21.07824 16.65019 19.06443 20.53512 #> Merc 230          27.76152 21.654221 26.21864 24.63166 25.76915 22.18598 #> Merc 450SL        17.16985 16.192894 16.87999 15.37412 15.68601 17.81127 #> Chrysler Imperial 10.40530  6.047878 10.40175 10.86645 10.31478 10.57517 #> Dodge Challenger  16.21480 16.865940 17.07459 16.08763 15.16975 19.67899 #> Lotus Europa      28.85082 27.452592 25.94803 25.67744 26.52092 27.06121 #> Volvo 142E        27.70860 23.174039 23.62983 26.60231 24.80764 23.41070 #>                     boot19   boot20 #> Mazda RX4         24.08124 23.20341 #> Mazda RX4 Wag     24.17197 23.23430 #> Hornet 4 Drive    20.20774 19.53153 #> Valiant           20.63196 19.89219 #> Merc 230          24.23999 27.66367 #> Merc 450SL        16.18159 15.17728 #> Chrysler Imperial 13.77349 10.33199 #> Dodge Challenger  18.90784 17.33990 #> Lotus Europa      25.69091 27.27966 #> Volvo 142E        27.33689 27.57869"},{"path":"/reference/selected_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Bolasso-selected Variables — selected_vars","title":"Bolasso-selected Variables — selected_vars","text":"Identifies independent variables selected Bolasso algorithm least fraction time specified user-defined threshold. typical value threshold 0.9 typically lower .","code":""},{"path":"/reference/selected_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bolasso-selected Variables — selected_vars","text":"","code":"selected_vars(object, threshold = 0.9, summarise = TRUE, ...)"},{"path":"/reference/selected_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bolasso-selected Variables — selected_vars","text":"object object class bolasso. threshold numeric 0 1, specifying fraction bootstrap replicates Lasso must select variable considered selected variable. summarise Boolean indicator FALSE indicates returning full set coefficients selected variable/bootstrap replicate level TRUE indicates taking average variable's coefficient across bootstrap replicates. default value TRUE efficient interpretable. ... Additional arguments pass predict objects class cv.glmnet cv.gamlr.","code":""},{"path":"/reference/selected_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bolasso-selected Variables — selected_vars","text":"tibble selected variable respective coefficient bootstrap replicate.","code":""},{"path":[]}]
