[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 bolasso authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Molitor. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Molitor D (2021). bolasso: Model Consistent Lasso Estimation Bootstrap. R package version 0.1.0, https://dmolitor.github.io/bolasso/.","code":"@Manual{,   title = {bolasso: Model Consistent Lasso Estimation Through the Bootstrap},   author = {Daniel Molitor},   year = {2021},   note = {R package version 0.1.0},   url = {https://dmolitor.github.io/bolasso/}, }"},{"path":"/index.html","id":"bolasso-","dir":"","previous_headings":"","what":"Model Consistent Lasso Estimation Through the Bootstrap","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"goal bolasso implement model-consistent Lasso estimation via bootstrap [1].","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"dmolitor/bolasso\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"illustrate usage bolasso, ’ll use Pima Indians Diabetes dataset determine factors important predictors testing positive diabetes. full description input variables, see link .","code":""},{"path":"/index.html","id":"load-requisite-packages-and-data","dir":"","previous_headings":"Usage","what":"Load requisite packages and data","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"First, run 100-fold bootstrapped Lasso glmnet implementation. can get rough estimate elapsed time using system.time(). can get quick overview model printing bolasso object.","code":"library(bolasso)  data(PimaIndiansDiabetes, package = \"mlbench\")  # Quick overview of the dataset str(PimaIndiansDiabetes) #> 'data.frame':    768 obs. of  9 variables: #>  $ pregnant: num  6 1 8 1 0 5 3 10 2 8 ... #>  $ glucose : num  148 85 183 89 137 116 78 115 197 125 ... #>  $ pressure: num  72 66 64 66 40 74 50 0 70 96 ... #>  $ triceps : num  35 29 0 23 35 0 32 0 45 0 ... #>  $ insulin : num  0 0 0 94 168 0 88 0 543 0 ... #>  $ mass    : num  33.6 26.6 23.3 28.1 43.1 25.6 31 35.3 30.5 0 ... #>  $ pedigree: num  0.627 0.351 0.672 0.167 2.288 ... #>  $ age     : num  50 31 32 21 33 30 26 29 53 54 ... #>  $ diabetes: Factor w/ 2 levels \"neg\",\"pos\": 2 1 2 1 2 1 2 1 2 2 ... system.time({   model <- bolasso(     diabetes ~ .,     data = PimaIndiansDiabetes,     n.boot = 100,      implement = \"glmnet\",     family = \"binomial\"   ) }) #> Loaded glmnet 4.1-3 #>    user  system elapsed  #>   42.32    0.11   43.00 model #> ------------- 100-fold bootstrapped Lasso ------------- #>  #> Model matrix dimensions: #>    - 8 Predictors #>    - 768 Observations #>  #> Selected variables: #>    - 6/8 predictors selected with 90% threshold #>    - 4/8 predictors selected with 100% threshold"},{"path":"/index.html","id":"extracting-selected-variables","dir":"","previous_headings":"Usage","what":"Extracting selected variables","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"Next, can extract variables selected 90% 100% bootstrapped Lasso models. can also pass relevant arguments predict cv.glmnet cv.gamlr model objects. case use lambda value minimizes OOS error.","code":"selected_vars(model,               threshold = 0.9,               select = \"lambda.min\") #> # A tibble: 7 x 2 #>   variable  mean_coef #>   <chr>         <dbl> #> 1 Intercept   -8.15   #> 2 pregnant     0.119  #> 3 glucose      0.0348 #> 4 pressure    -0.0113 #> 5 mass         0.0821 #> 6 pedigree     0.849  #> 7 age          0.0138  selected_vars(model,               threshold = 1,               select = \"lambda.min\") #> # A tibble: 5 x 2 #>   variable  mean_coef #>   <chr>         <dbl> #> 1 Intercept   -8.15   #> 2 pregnant     0.119  #> 3 glucose      0.0348 #> 4 mass         0.0821 #> 5 pedigree     0.849"},{"path":"/index.html","id":"plotting-selected-variables","dir":"","previous_headings":"Usage","what":"Plotting selected variables","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"can also quickly plot selected variables 90% 100% threshold values.","code":"plot(model, threshold = 0.9) plot(model, threshold = 1)"},{"path":"/index.html","id":"parallelizing-bolasso","dir":"","previous_headings":"Usage","what":"Parallelizing bolasso","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"can execute bolasso parallel via future package. can copy code one minor tweak shown . can now run code , unaltered, execute parallel.","code":"future::plan(\"multisession\") system.time({   model <- bolasso(     diabetes ~ .,     data = PimaIndiansDiabetes,     n.boot = 100,      implement = \"glmnet\",     family = \"binomial\"   ) }) #>    user  system elapsed  #>    0.17    0.02    5.56"},{"path":"/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"[1] Bach, Francis. “Bolasso: Model Consistent Lasso Estimation Bootstrap.” ArXiv:0804.1302 [Cs, Math, Stat], April 8, 2008. https://arxiv.org/abs/0804.1302.","code":""},{"path":"/reference/bolasso.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootsrap-enhanced Lasso — bolasso","title":"Bootsrap-enhanced Lasso — bolasso","text":"function implements model-consistent Lasso estimation bootstrap. supports parallel processing way future package, allowing user flexibly specify many parallelization methods. method developed variable-selection algorithm, package also supports making ensemble predictions new data using bagged Lasso models.","code":""},{"path":"/reference/bolasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootsrap-enhanced Lasso — bolasso","text":"","code":"bolasso(   form,   data,   n.boot = 100,   progress = TRUE,   implement = \"glmnet\",   x = NULL,   y = NULL,   ... )"},{"path":"/reference/bolasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootsrap-enhanced Lasso — bolasso","text":"form optional object class formula (one can coerced class): symbolic description model fitted. Can omitted x y non-missing. data optional object class data.frame contains modeling variables referenced form. Can omitted x y non-missing. n.boot integer specifying number bootstrap replicates. progress boolean indicating whether display progress across bootstrap folds. implement character; either 'glmnet' 'gamlr', specifying Lasso implementation utilize. specific modeling details, see glmnet::cv.glmnet gamlr::cv.gamlr. x optional predictor matrix lieu form data. y optional response vector lieu form data. ... Additional parameters pass either glmnet::cv.glmnet gamlr::cv.gamlr.","code":""},{"path":"/reference/bolasso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootsrap-enhanced Lasso — bolasso","text":"object class bolasso. object list length n.boot cv.glmnet cv.gamlr objects.","code":""},{"path":"/reference/bolasso.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bootsrap-enhanced Lasso — bolasso","text":"Bach FR (2008). “Bolasso: model consistent Lasso estimation bootstrap.” CoRR, abs/0804.1302. 0804.1302, https://arxiv.org/abs/0804.1302.","code":""},{"path":[]},{"path":"/reference/bolasso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootsrap-enhanced Lasso — bolasso","text":"","code":"mtcars[, c(2, 10:11)] <- lapply(mtcars[, c(2, 10:11)], as.factor) idx <- sample(nrow(mtcars), 22) mtcars_train <- mtcars[idx, ] mtcars_test <- mtcars[-idx, ]  ## Formula Interface  # Train model set.seed(123) bolasso_form <- bolasso(   form = mpg ~ .,   data = mtcars_train,   n.boot = 20,   nfolds = 5,   implement = \"glmnet\" ) #> Loaded glmnet 4.1-3  # Extract selected variables selected_vars(bolasso_form, threshold = 0.9, select = \"lambda.min\") #> # A tibble: 1 × 2 #>   variable  mean_coef #>   <chr>         <dbl> #> 1 Intercept      12.3  # Bagged ensemble prediction on test data predict(bolasso_form,         new.data = mtcars_test,         select = \"lambda.min\") #>                         boot1    boot2    boot3    boot4     boot5    boot6 #> Mazda RX4           21.576581 17.72208 17.81363 21.20254 22.531935 21.66663 #> Hornet 4 Drive      21.315313 18.88140 18.14156 20.63045 20.231857 19.50443 #> Merc 230            28.563419 27.53128 31.72019 27.71459 23.639463 24.95103 #> Merc 450SE          14.634207 15.37023 15.94594 17.98082 13.462257 16.69345 #> Cadillac Fleetwood  10.593666 14.77655 14.65380 16.38941  6.272891 15.38237 #> Lincoln Continental  9.646374 14.63065 14.26808 16.01089  5.104668 15.05125 #> Toyota Corona       28.143758 24.22182 27.15060 27.63889 25.962142 25.35175 #> Dodge Challenger    16.828665 19.27542 16.07143 19.11638 16.423693 17.70497 #> Ford Pantera L      16.868116 16.00834 18.23128 15.37336 17.943056 17.94893 #> Volvo 142E          26.415154 28.79551 26.84974 28.40188 23.277864 27.39038 #>                         boot7    boot8    boot9   boot10   boot11    boot12 #> Mazda RX4           22.071337 21.80766 20.64976 18.54756 16.25218 19.931657 #> Hornet 4 Drive      22.059909 18.68733 21.20893 18.50071 26.14215 19.040273 #> Merc 230            28.359383 24.17637 29.27342 34.61890 34.70485 23.914134 #> Merc 450SE          14.811099 16.35465 14.44790 14.27509 14.38116 15.690701 #> Cadillac Fleetwood  10.553870 15.37268 15.42746 14.95494 15.19372  8.458725 #> Lincoln Continental  9.454356 15.03062 15.08545 14.07267 14.71797  7.654925 #> Toyota Corona       28.370220 22.93583 27.78157 27.88506 30.97364 23.103285 #> Dodge Challenger    18.172844 18.68024 15.02360 12.72952 16.15735 20.837440 #> Ford Pantera L      17.660721 18.08754 18.08921 22.33185 17.80064 15.916392 #> Volvo 142E          25.583624 26.82097 30.70053 23.81754 25.79784 25.198514 #>                       boot13    boot14    boot15   boot16   boot17   boot18 #> Mazda RX4           21.67093 21.038541 22.006916 20.90707 21.29648 21.30790 #> Hornet 4 Drive      18.22302 22.701018 19.454005 19.52332 20.27347 20.18572 #> Merc 230            24.29636 28.644075 23.388299 23.69538 24.30045 29.27176 #> Merc 450SE          16.32147 15.455269 14.792445 17.05751 16.97800 15.47429 #> Cadillac Fleetwood  15.79774  8.355012 10.048207 15.17764 13.82099 14.42646 #> Lincoln Continental 15.59320  7.197733  9.318878 14.86097 13.28489 13.64173 #> Toyota Corona       23.48012 27.966383 24.985144 21.56781 25.94852 26.20196 #> Dodge Challenger    16.94068 18.352384 17.917855 16.43660 18.65459 18.84163 #> Ford Pantera L      17.70188 15.680787 17.756155 17.12650 18.23368 19.66614 #> Volvo 142E          27.05537 25.100132 24.708139 25.84248 25.04622 27.69798 #>                       boot19   boot20 #> Mazda RX4           20.95239 20.92704 #> Hornet 4 Drive      19.50658 19.41958 #> Merc 230            29.06323 26.28186 #> Merc 450SE          16.47108 15.81907 #> Cadillac Fleetwood  14.58992 13.18902 #> Lincoln Continental 14.42696 12.63278 #> Toyota Corona       26.23110 24.77776 #> Dodge Challenger    18.51523 18.80185 #> Ford Pantera L      17.81777 17.15225 #> Volvo 142E          30.91216 26.45386  ## Alternal Matrix Interface  # Train model set.seed(123) bolasso_mat <- bolasso(   x = model.matrix(mpg ~ . - 1, mtcars_train),   y = mtcars_train[, 1],   data = mtcars_train,   n.boot = 20,   nfolds = 5,   implement = \"glmnet\" )  # Extract selected variables selected_vars(bolasso_mat, threshold = 0.9, select = \"lambda.min\") #> # A tibble: 1 × 2 #>   variable  mean_coef #>   <chr>         <dbl> #> 1 Intercept      12.3  # Bagged ensemble prediction on test data predict(bolasso_mat,         new.data = model.matrix(mpg ~ . - 1, mtcars_test),         select = \"lambda.min\") #>                         boot1    boot2    boot3    boot4     boot5    boot6 #> Mazda RX4           21.576581 17.72208 17.81363 21.20254 22.531935 21.66663 #> Hornet 4 Drive      21.315313 18.88140 18.14156 20.63045 20.231857 19.50443 #> Merc 230            28.563419 27.53128 31.72019 27.71459 23.639463 24.95103 #> Merc 450SE          14.634207 15.37023 15.94594 17.98082 13.462257 16.69345 #> Cadillac Fleetwood  10.593666 14.77655 14.65380 16.38941  6.272891 15.38237 #> Lincoln Continental  9.646374 14.63065 14.26808 16.01089  5.104668 15.05125 #> Toyota Corona       28.143758 24.22182 27.15060 27.63889 25.962142 25.35175 #> Dodge Challenger    16.828665 19.27542 16.07143 19.11638 16.423693 17.70497 #> Ford Pantera L      16.868116 16.00834 18.23128 15.37336 17.943056 17.94893 #> Volvo 142E          26.415154 28.79551 26.84974 28.40188 23.277864 27.39038 #>                         boot7    boot8    boot9   boot10   boot11    boot12 #> Mazda RX4           22.071337 21.80766 20.64976 18.54756 16.25218 19.931657 #> Hornet 4 Drive      22.059909 18.68733 21.20893 18.50071 26.14215 19.040273 #> Merc 230            28.359383 24.17637 29.27342 34.61890 34.70485 23.914134 #> Merc 450SE          14.811099 16.35465 14.44790 14.27509 14.38116 15.690701 #> Cadillac Fleetwood  10.553870 15.37268 15.42746 14.95494 15.19372  8.458725 #> Lincoln Continental  9.454356 15.03062 15.08545 14.07267 14.71797  7.654925 #> Toyota Corona       28.370220 22.93583 27.78157 27.88506 30.97364 23.103285 #> Dodge Challenger    18.172844 18.68024 15.02360 12.72952 16.15735 20.837440 #> Ford Pantera L      17.660721 18.08754 18.08921 22.33185 17.80064 15.916392 #> Volvo 142E          25.583624 26.82097 30.70053 23.81754 25.79784 25.198514 #>                       boot13    boot14    boot15   boot16   boot17   boot18 #> Mazda RX4           21.67093 21.038541 22.006916 20.90707 21.29648 21.30790 #> Hornet 4 Drive      18.22302 22.701018 19.454005 19.52332 20.27347 20.18572 #> Merc 230            24.29636 28.644075 23.388299 23.69538 24.30045 29.27176 #> Merc 450SE          16.32147 15.455269 14.792445 17.05751 16.97800 15.47429 #> Cadillac Fleetwood  15.79774  8.355012 10.048207 15.17764 13.82099 14.42646 #> Lincoln Continental 15.59320  7.197733  9.318878 14.86097 13.28489 13.64173 #> Toyota Corona       23.48012 27.966383 24.985144 21.56781 25.94852 26.20196 #> Dodge Challenger    16.94068 18.352384 17.917855 16.43660 18.65459 18.84163 #> Ford Pantera L      17.70188 15.680787 17.756155 17.12650 18.23368 19.66614 #> Volvo 142E          27.05537 25.100132 24.708139 25.84248 25.04622 27.69798 #>                       boot19   boot20 #> Mazda RX4           20.95239 20.92704 #> Hornet 4 Drive      19.50658 19.41958 #> Merc 230            29.06323 26.28186 #> Merc 450SE          16.47108 15.81907 #> Cadillac Fleetwood  14.58992 13.18902 #> Lincoln Continental 14.42696 12.63278 #> Toyota Corona       26.23110 24.77776 #> Dodge Challenger    18.51523 18.80185 #> Ford Pantera L      17.81777 17.15225 #> Volvo 142E          30.91216 26.45386"},{"path":"/reference/selected_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Bolasso-selected Variables — selected_vars","title":"Bolasso-selected Variables — selected_vars","text":"Identifies independent variables selected Bolasso algorithm least fraction time specified user-defined threshold. typical value threshold 0.9 typically lower .","code":""},{"path":"/reference/selected_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bolasso-selected Variables — selected_vars","text":"","code":"selected_vars(object, threshold = 0.9, summarise = TRUE, ...)"},{"path":"/reference/selected_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bolasso-selected Variables — selected_vars","text":"object object class bolasso. threshold numeric 0 1, specifying fraction bootstrap replicates Lasso must select variable considered selected variable. summarise Boolean indicator FALSE indicates returning full set coefficients selected variable/bootstrap replicate level TRUE indicates taking average variable's coefficient across bootstrap replicates. default value TRUE efficient interpretable. ... Additional arguments pass predict objects class cv.glmnet cv.gamlr.","code":""},{"path":"/reference/selected_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bolasso-selected Variables — selected_vars","text":"tibble selected variable respective coefficient bootstrap replicate.","code":""},{"path":[]}]
