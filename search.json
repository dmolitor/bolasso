[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 bolasso authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Molitor. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Molitor D (2021). bolasso: Model Consistent Lasso Estimation Bootstrap. R package version 0.1.0, https://dmolitor.github.io/bolasso/.","code":"@Manual{,   title = {bolasso: Model Consistent Lasso Estimation Through the Bootstrap},   author = {Daniel Molitor},   year = {2021},   note = {R package version 0.1.0},   url = {https://dmolitor.github.io/bolasso/}, }"},{"path":"/index.html","id":"bolasso-","dir":"","previous_headings":"","what":"Model Consistent Lasso Estimation Through the Bootstrap","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"goal bolasso implement model-consistent Lasso estimation via bootstrap [1].","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"dmolitor/bolasso\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"illustrate usage bolasso, ’ll use Pima Indians Diabetes dataset determine factors important predictors testing positive diabetes. full description input variables, see link .","code":""},{"path":"/index.html","id":"load-requisite-packages-and-data","dir":"","previous_headings":"Usage","what":"Load requisite packages and data","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"First, run 100-fold bootstrapped Lasso glmnet implementation. can get rough estimate elapsed time using system.time(). can get quick overview model printing bolasso object.","code":"library(bolasso)  data(PimaIndiansDiabetes, package = \"mlbench\")  # Quick overview of the dataset str(PimaIndiansDiabetes) #> 'data.frame':    768 obs. of  9 variables: #>  $ pregnant: num  6 1 8 1 0 5 3 10 2 8 ... #>  $ glucose : num  148 85 183 89 137 116 78 115 197 125 ... #>  $ pressure: num  72 66 64 66 40 74 50 0 70 96 ... #>  $ triceps : num  35 29 0 23 35 0 32 0 45 0 ... #>  $ insulin : num  0 0 0 94 168 0 88 0 543 0 ... #>  $ mass    : num  33.6 26.6 23.3 28.1 43.1 25.6 31 35.3 30.5 0 ... #>  $ pedigree: num  0.627 0.351 0.672 0.167 2.288 ... #>  $ age     : num  50 31 32 21 33 30 26 29 53 54 ... #>  $ diabetes: Factor w/ 2 levels \"neg\",\"pos\": 2 1 2 1 2 1 2 1 2 2 ... system.time({   model <- bolasso(     diabetes ~ .,     data = PimaIndiansDiabetes,     n.boot = 100,      implement = \"glmnet\",     family = \"binomial\"   ) }) #> Loaded glmnet 4.1-3 #>    user  system elapsed  #>   42.32    0.11   43.00 model #> ------------- 100-fold bootstrapped Lasso ------------- #>  #> Model matrix dimensions: #>    - 8 Predictors #>    - 768 Observations #>  #> Selected variables: #>    - 6/8 predictors selected with 90% threshold #>    - 4/8 predictors selected with 100% threshold"},{"path":"/index.html","id":"extracting-selected-variables","dir":"","previous_headings":"Usage","what":"Extracting selected variables","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"Next, can extract variables selected 90% 100% bootstrapped Lasso models. can also pass relevant arguments predict cv.glmnet cv.gamlr model objects. case use lambda value minimizes OOS error.","code":"selected_vars(model,               threshold = 0.9,               select = \"lambda.min\") #> # A tibble: 7 x 2 #>   variable  mean_coef #>   <chr>         <dbl> #> 1 Intercept   -8.15   #> 2 pregnant     0.119  #> 3 glucose      0.0348 #> 4 pressure    -0.0113 #> 5 mass         0.0821 #> 6 pedigree     0.849  #> 7 age          0.0138  selected_vars(model,               threshold = 1,               select = \"lambda.min\") #> # A tibble: 5 x 2 #>   variable  mean_coef #>   <chr>         <dbl> #> 1 Intercept   -8.15   #> 2 pregnant     0.119  #> 3 glucose      0.0348 #> 4 mass         0.0821 #> 5 pedigree     0.849"},{"path":"/index.html","id":"plotting-selected-variables","dir":"","previous_headings":"Usage","what":"Plotting selected variables","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"can also quickly plot selected variables 90% 100% threshold values.","code":"plot(model, threshold = 0.9) plot(model, threshold = 1)"},{"path":"/index.html","id":"parallelizing-bolasso","dir":"","previous_headings":"Usage","what":"Parallelizing bolasso","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"can execute bolasso parallel via future package. can copy code one minor tweak shown . can now run code , unaltered, execute parallel.","code":"future::plan(\"multisession\") system.time({   model <- bolasso(     diabetes ~ .,     data = PimaIndiansDiabetes,     n.boot = 100,      implement = \"glmnet\",     family = \"binomial\"   ) }) #>    user  system elapsed  #>    0.17    0.02    5.56"},{"path":"/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"[1] Bach, Francis. “Bolasso: Model Consistent Lasso Estimation Bootstrap.” ArXiv:0804.1302 [Cs, Math, Stat], April 8, 2008. https://arxiv.org/abs/0804.1302.","code":""},{"path":"/reference/bolasso.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootsrap-enhanced Lasso — bolasso","title":"Bootsrap-enhanced Lasso — bolasso","text":"function implements model-consistent Lasso estimation bootstrap. supports parallel processing way future package, allowing user flexibly specify many parallelization methods. method developed variable-selection algorithm, package also supports making ensemble predictions new data using bagged Lasso models.","code":""},{"path":"/reference/bolasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootsrap-enhanced Lasso — bolasso","text":"","code":"bolasso(   form,   data,   n.boot = 100,   progress = TRUE,   implement = \"glmnet\",   x = NULL,   y = NULL,   ... )"},{"path":"/reference/bolasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootsrap-enhanced Lasso — bolasso","text":"form optional object class formula (one can coerced class): symbolic description model fitted. Can omitted x y non-missing. data optional object class data.frame contains modeling variables referenced form. Can omitted x y non-missing. n.boot integer specifying number bootstrap replicates. progress boolean indicating whether display progress across bootstrap folds. implement character; either 'glmnet' 'gamlr', specifying Lasso implementation utilize. specific modeling details, see glmnet::cv.glmnet gamlr::cv.gamlr. x optional predictor matrix lieu form data. y optional response vector lieu form data. ... Additional parameters pass either glmnet::cv.glmnet gamlr::cv.gamlr.","code":""},{"path":"/reference/bolasso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootsrap-enhanced Lasso — bolasso","text":"object class bolasso. object list length n.boot cv.glmnet cv.gamlr objects.","code":""},{"path":"/reference/bolasso.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bootsrap-enhanced Lasso — bolasso","text":"Bach FR (2008). “Bolasso: model consistent Lasso estimation bootstrap.” CoRR, abs/0804.1302. 0804.1302, https://arxiv.org/abs/0804.1302.","code":""},{"path":[]},{"path":"/reference/bolasso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootsrap-enhanced Lasso — bolasso","text":"","code":"mtcars[, c(2, 10:11)] <- lapply(mtcars[, c(2, 10:11)], as.factor) idx <- sample(nrow(mtcars), 22) mtcars_train <- mtcars[idx, ] mtcars_test <- mtcars[-idx, ]  ## Formula Interface  # Train model set.seed(123) bolasso_form <- bolasso(   form = mpg ~ .,   data = mtcars_train,   n.boot = 20,   nfolds = 5,   implement = \"glmnet\" ) #> Loaded glmnet 4.1-3  # Extract selected variables selected_vars(bolasso_form, threshold = 0.9, select = \"lambda.min\") #> # A tibble: 1 × 2 #>   variable  mean_coef #>   <chr>         <dbl> #> 1 Intercept      26.3  # Bagged ensemble prediction on test data predict(bolasso_form,         new.data = mtcars_test,         select = \"lambda.min\") #>                      boot1    boot2    boot3    boot4    boot5    boot6 #> Mazda RX4 Wag     19.99757 19.98025 23.12462 20.41575 20.73373 21.84665 #> Datsun 710        24.28814 26.45366 26.65587 31.91484 25.68585 30.32397 #> Duster 360        13.36547 16.39809 15.97934 13.85490 17.03136 14.03091 #> Merc 450SE        14.86574 15.54451 15.37442 14.67944 15.80518 15.41195 #> Chrysler Imperial 11.10688 11.07426 11.00613 10.07774 11.71491 10.81746 #> Fiat 128          25.28465 27.11139 27.35899 32.95893 26.17038 30.54121 #> Fiat X1-9         25.66794 27.93003 28.13080 33.66601 26.97411 31.02097 #> Porsche 914-2     25.53249 27.03097 26.03048 25.99840 26.24023 26.34839 #> Ford Pantera L    16.74306 17.43178 18.74765 17.73403 18.15968 18.88833 #> Volvo 142E        25.88578 24.86254 25.10657 27.37477 24.21925 29.49119 #>                      boot7    boot8    boot9    boot10   boot11   boot12 #> Mazda RX4 Wag     27.09102 20.73109 20.66918 16.136986 19.69954 21.58850 #> Datsun 710        37.11596 25.74299 22.88049 21.655971 28.96567 31.05141 #> Duster 360        14.42402 16.86136 13.21075  9.649251 15.00978 11.25844 #> Merc 450SE        15.91199 15.60627 14.67814 17.338625 16.76451 17.65888 #> Chrysler Imperial 10.08411 10.37117 10.46376 11.388257 10.25530 11.34653 #> Fiat 128          34.19871 26.44595 24.28139 23.444616 29.94375 31.80935 #> Fiat X1-9         36.10130 27.43603 24.76877 23.594503 30.64241 31.80943 #> Porsche 914-2     29.27946 26.43436 27.94222 25.282004 29.24082 30.07835 #> Ford Pantera L    19.67139 18.17663 16.26213 15.596082 15.64625 22.55192 #> Volvo 142E        34.24428 23.87348 25.25135 23.352621 27.30865 31.92061 #>                     boot13   boot14   boot15   boot16   boot17   boot18 #> Mazda RX4 Wag     21.28049 21.07309 21.18232 26.86065 20.08305 25.80368 #> Datsun 710        27.58922 26.80002 25.43289 33.39117 24.93316 29.05321 #> Duster 360        15.10295 16.99624 17.55462 11.47752 15.63087 13.02393 #> Merc 450SE        14.36921 15.91549 16.93543 17.20479 16.00669 16.08140 #> Chrysler Imperial 10.01412 10.69465 12.70735 11.41107  9.89071 10.38507 #> Fiat 128          28.25579 27.54610 26.10457 33.52482 25.75964 30.22219 #> Fiat X1-9         29.04131 28.51249 26.85574 33.79090 26.65166 30.69535 #> Porsche 914-2     26.96579 26.10995 25.96767 32.81539 27.59730 27.62764 #> Ford Pantera L    18.34748 18.23786 18.45518 23.21856 16.67998 18.01385 #> Volvo 142E        26.04145 24.93972 23.93250 33.70703 25.41200 27.66613 #>                     boot19   boot20 #> Mazda RX4 Wag     22.87049 15.44686 #> Datsun 710        29.76078 20.40571 #> Duster 360        14.71074 12.46453 #> Merc 450SE        14.32996 17.04984 #> Chrysler Imperial 10.39206 11.01615 #> Fiat 128          30.77747 18.33438 #> Fiat X1-9         31.17178 19.30155 #> Porsche 914-2     26.73666 25.24888 #> Ford Pantera L    17.91646 16.53628 #> Volvo 142E        28.32714 27.72665  ## Alternal Matrix Interface  # Train model set.seed(123) bolasso_mat <- bolasso(   x = model.matrix(mpg ~ . - 1, mtcars_train),   y = mtcars_train[, 1],   data = mtcars_train,   n.boot = 20,   nfolds = 5,   implement = \"glmnet\" )  # Extract selected variables selected_vars(bolasso_mat, threshold = 0.9, select = \"lambda.min\") #> # A tibble: 1 × 2 #>   variable  mean_coef #>   <chr>         <dbl> #> 1 Intercept      26.3  # Bagged ensemble prediction on test data predict(bolasso_mat,         new.data = model.matrix(mpg ~ . - 1, mtcars_test),         select = \"lambda.min\") #>                      boot1    boot2    boot3    boot4    boot5    boot6 #> Mazda RX4 Wag     19.99757 19.98025 23.12462 20.41575 20.73373 21.84665 #> Datsun 710        24.28814 26.45366 26.65587 31.91484 25.68585 30.32397 #> Duster 360        13.36547 16.39809 15.97934 13.85490 17.03136 14.03091 #> Merc 450SE        14.86574 15.54451 15.37442 14.67944 15.80518 15.41195 #> Chrysler Imperial 11.10688 11.07426 11.00613 10.07774 11.71491 10.81746 #> Fiat 128          25.28465 27.11139 27.35899 32.95893 26.17038 30.54121 #> Fiat X1-9         25.66794 27.93003 28.13080 33.66601 26.97411 31.02097 #> Porsche 914-2     25.53249 27.03097 26.03048 25.99840 26.24023 26.34839 #> Ford Pantera L    16.74306 17.43178 18.74765 17.73403 18.15968 18.88833 #> Volvo 142E        25.88578 24.86254 25.10657 27.37477 24.21925 29.49119 #>                      boot7    boot8    boot9    boot10   boot11   boot12 #> Mazda RX4 Wag     27.09102 20.73109 20.66918 16.136986 19.69954 21.58850 #> Datsun 710        37.11596 25.74299 22.88049 21.655971 28.96567 31.05141 #> Duster 360        14.42402 16.86136 13.21075  9.649251 15.00978 11.25844 #> Merc 450SE        15.91199 15.60627 14.67814 17.338625 16.76451 17.65888 #> Chrysler Imperial 10.08411 10.37117 10.46376 11.388257 10.25530 11.34653 #> Fiat 128          34.19871 26.44595 24.28139 23.444616 29.94375 31.80935 #> Fiat X1-9         36.10130 27.43603 24.76877 23.594503 30.64241 31.80943 #> Porsche 914-2     29.27946 26.43436 27.94222 25.282004 29.24082 30.07835 #> Ford Pantera L    19.67139 18.17663 16.26213 15.596082 15.64625 22.55192 #> Volvo 142E        34.24428 23.87348 25.25135 23.352621 27.30865 31.92061 #>                     boot13   boot14   boot15   boot16   boot17   boot18 #> Mazda RX4 Wag     21.28049 21.07309 21.18232 26.86065 20.08305 25.80368 #> Datsun 710        27.58922 26.80002 25.43289 33.39117 24.93316 29.05321 #> Duster 360        15.10295 16.99624 17.55462 11.47752 15.63087 13.02393 #> Merc 450SE        14.36921 15.91549 16.93543 17.20479 16.00669 16.08140 #> Chrysler Imperial 10.01412 10.69465 12.70735 11.41107  9.89071 10.38507 #> Fiat 128          28.25579 27.54610 26.10457 33.52482 25.75964 30.22219 #> Fiat X1-9         29.04131 28.51249 26.85574 33.79090 26.65166 30.69535 #> Porsche 914-2     26.96579 26.10995 25.96767 32.81539 27.59730 27.62764 #> Ford Pantera L    18.34748 18.23786 18.45518 23.21856 16.67998 18.01385 #> Volvo 142E        26.04145 24.93972 23.93250 33.70703 25.41200 27.66613 #>                     boot19   boot20 #> Mazda RX4 Wag     22.87049 15.44686 #> Datsun 710        29.76078 20.40571 #> Duster 360        14.71074 12.46453 #> Merc 450SE        14.32996 17.04984 #> Chrysler Imperial 10.39206 11.01615 #> Fiat 128          30.77747 18.33438 #> Fiat X1-9         31.17178 19.30155 #> Porsche 914-2     26.73666 25.24888 #> Ford Pantera L    17.91646 16.53628 #> Volvo 142E        28.32714 27.72665"},{"path":"/reference/selected_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Bolasso-selected Variables — selected_vars","title":"Bolasso-selected Variables — selected_vars","text":"Identifies independent variables selected Bolasso algorithm least fraction time specified user-defined threshold. typical value threshold 0.9 typically lower .","code":""},{"path":"/reference/selected_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bolasso-selected Variables — selected_vars","text":"","code":"selected_vars(object, threshold = 0.9, summarise = TRUE, ...)"},{"path":"/reference/selected_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bolasso-selected Variables — selected_vars","text":"object object class bolasso. threshold numeric 0 1, specifying fraction bootstrap replicates Lasso must select variable considered selected variable. summarise Boolean indicator FALSE indicates returning full set coefficients selected variable/bootstrap replicate level TRUE indicates taking average variable's coefficient across bootstrap replicates. default value TRUE efficient interpretable. ... Additional arguments pass predict objects class cv.glmnet cv.gamlr.","code":""},{"path":"/reference/selected_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bolasso-selected Variables — selected_vars","text":"tibble selected variable respective coefficient bootstrap replicate.","code":""},{"path":[]}]
