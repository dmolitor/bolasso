[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 bolasso authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Molitor. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Molitor D (2021). bolasso: Model Consistent Lasso Estimation Bootstrap. R package version 0.0.2.","code":"@Manual{,   title = {bolasso: Model Consistent Lasso Estimation through the Bootstrap},   author = {Daniel Molitor},   year = {2021},   note = {R package version 0.0.2}, }"},{"path":"/index.html","id":"bolasso-","dir":"","previous_headings":"","what":"Model Consistent Lasso Estimation through the Bootstrap","title":"Model Consistent Lasso Estimation through the Bootstrap","text":"goal bolasso implement model-consistent Lasso estimation via bootstrap [1].","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Model Consistent Lasso Estimation through the Bootstrap","text":"can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"dmolitor/bolasso\")"},{"path":"/index.html","id":"variable-selection-with-bolasso","dir":"","previous_headings":"","what":"Variable selection with bolasso","title":"Model Consistent Lasso Estimation through the Bootstrap","text":"illustrate usage bolasso, ’ll use Pima Indians Diabetes dataset determine factors important predictors testing positive diabetes. full description input variables, see link .","code":""},{"path":"/index.html","id":"load-requisite-packages-and-data","dir":"","previous_headings":"Variable selection with bolasso","what":"Load requisite packages and data","title":"Model Consistent Lasso Estimation through the Bootstrap","text":"First, run 100-fold bootstrapped Lasso glmnet implementation. can get rough estimate elapsed time using system.time(). can get quick overview model printing bolasso object.","code":"library(bolasso)  data(PimaIndiansDiabetes, package = \"mlbench\")  # Quick overview of the dataset str(PimaIndiansDiabetes) #> 'data.frame':    768 obs. of  9 variables: #>  $ pregnant: num  6 1 8 1 0 5 3 10 2 8 ... #>  $ glucose : num  148 85 183 89 137 116 78 115 197 125 ... #>  $ pressure: num  72 66 64 66 40 74 50 0 70 96 ... #>  $ triceps : num  35 29 0 23 35 0 32 0 45 0 ... #>  $ insulin : num  0 0 0 94 168 0 88 0 543 0 ... #>  $ mass    : num  33.6 26.6 23.3 28.1 43.1 25.6 31 35.3 30.5 0 ... #>  $ pedigree: num  0.627 0.351 0.672 0.167 2.288 ... #>  $ age     : num  50 31 32 21 33 30 26 29 53 54 ... #>  $ diabetes: Factor w/ 2 levels \"neg\",\"pos\": 2 1 2 1 2 1 2 1 2 2 ... system.time({   model <- bolasso(     diabetes ~ .,     data = PimaIndiansDiabetes,     n.boot = 100,      implement = \"glmnet\",     family = \"binomial\"   ) }) #> Loaded glmnet 4.1-3 #>    user  system elapsed  #>   19.83    0.12   19.96 model #> ------------- 100-fold bootstrapped Lasso ------------- #>  #> Model matrix dimensions: #>    - 8 Predictors #>    - 768 Observations #>  #> Selected variables: #>    - 6/8 predictors selected with 90% threshold #>    - 4/8 predictors selected with 100% threshold"},{"path":"/index.html","id":"extracting-selected-variables","dir":"","previous_headings":"Variable selection with bolasso","what":"Extracting selected variables","title":"Model Consistent Lasso Estimation through the Bootstrap","text":"Next, can extract variables selected 90% 100% bootstrapped Lasso models. can also pass relevant arguments predict cv.glmnet cv.gamlr model objects. case use lambda value minimizes OOS error.","code":"selected_vars(model,               threshold = 0.9,               select = \"lambda.min\") #> # A tibble: 7 x 2 #>   variable  mean_coef #>   <chr>         <dbl> #> 1 Intercept   -8.15   #> 2 pregnant     0.119  #> 3 glucose      0.0348 #> 4 pressure    -0.0113 #> 5 mass         0.0821 #> 6 pedigree     0.849  #> 7 age          0.0138  selected_vars(model,               threshold = 1,               select = \"lambda.min\") #> # A tibble: 5 x 2 #>   variable  mean_coef #>   <chr>         <dbl> #> 1 Intercept   -8.15   #> 2 pregnant     0.119  #> 3 glucose      0.0348 #> 4 mass         0.0821 #> 5 pedigree     0.849"},{"path":"/index.html","id":"plotting-selected-variables","dir":"","previous_headings":"Variable selection with bolasso","what":"Plotting selected variables","title":"Model Consistent Lasso Estimation through the Bootstrap","text":"can also quickly plot selected variables 90% 100% threshold values.","code":"plot(model, threshold = 0.9) plot(model, threshold = 1)"},{"path":"/index.html","id":"parallelizing-bolasso","dir":"","previous_headings":"Variable selection with bolasso","what":"Parallelizing bolasso","title":"Model Consistent Lasso Estimation through the Bootstrap","text":"can execute bolasso parallel via future package. can copy code one minor tweak shown . can now run code , unaltered, execute parallel.","code":"future::plan(\"multisession\") system.time({   model <- bolasso(     diabetes ~ .,     data = PimaIndiansDiabetes,     n.boot = 100,      implement = \"glmnet\",     family = \"binomial\"   ) }) #>    user  system elapsed  #>    0.12    0.05    5.55"},{"path":"/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Model Consistent Lasso Estimation through the Bootstrap","text":"[1] Bach, Francis. “Bolasso: Model Consistent Lasso Estimation Bootstrap.” ArXiv:0804.1302 [Cs, Math, Stat], April 8, 2008. http://arxiv.org/abs/0804.1302.","code":""},{"path":"/reference/bolasso.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootsrap-enhanced Lasso — bolasso","title":"Bootsrap-enhanced Lasso — bolasso","text":"function implements model-consistent Lasso estimation bootstrap. supports parallel processing way future package, allowing user flexibly specify many parallelization methods. method developed variable-selection algorithm, package also supports making ensemble predictions new data using bagged Lasso models.","code":""},{"path":"/reference/bolasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootsrap-enhanced Lasso — bolasso","text":"","code":"bolasso(   form,   data,   n.boot = 100,   progress = TRUE,   implement = \"glmnet\",   x = NULL,   y = NULL,   ... )"},{"path":"/reference/bolasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootsrap-enhanced Lasso — bolasso","text":"form optional object class formula (one can coerced class): symbolic description model fitted. Can omitted x y non-missing. data optional object class data.frame contains modeling variables referenced form. Can omitted x y non-missing. n.boot integer specifying number bootstrap replicates. progress boolean indicating whether display progress across bootstrap folds. implement character; either 'glmnet' 'gamlr', specifying Lasso implementation utilize. specific modeling details, see glmnet::cv.glmnet gamlr::cv.gamlr. x optional predictor matrix lieu form data. y optional response vector lieu form data. ... Additional parameters pass either glmnet::cv.glmnet gamlr::cv.gamlr.","code":""},{"path":"/reference/bolasso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootsrap-enhanced Lasso — bolasso","text":"object class bolasso. object list length n.boot cv.glmnet cv.gamlr objects.","code":""},{"path":"/reference/bolasso.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bootsrap-enhanced Lasso — bolasso","text":"Bach FR (2008). “Bolasso: model consistent Lasso estimation bootstrap.” CoRR, abs/0804.1302. 0804.1302, http://arxiv.org/abs/0804.1302.","code":""},{"path":[]},{"path":"/reference/bolasso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootsrap-enhanced Lasso — bolasso","text":"","code":"mtcars[, c(2, 10:11)] <- lapply(mtcars[, c(2, 10:11)], as.factor) idx <- sample(nrow(mtcars), 22) mtcars_train <- mtcars[idx, ] mtcars_test <- mtcars[-idx, ]  ## Formula Interface  # Train model set.seed(123) bolasso_form <- bolasso(   form = mpg ~ .,   data = mtcars_train,   n.boot = 20,   nfolds = 5,   implement = \"glmnet\" ) #> Loaded glmnet 4.1-3  # Extract selected variables selected_vars(bolasso_form, threshold = 0.9, select = \"lambda.min\") #> # A tibble: 1 × 2 #>   variable  mean_coef #>   <chr>         <dbl> #> 1 Intercept      19.4  # Bagged ensemble prediction on test data predict(bolasso_form,         new.data = mtcars_test,         select = \"lambda.min\") #>                       boot1    boot2    boot3    boot4    boot5    boot6 #> Datsun 710         25.65541 27.71719 27.91953 25.42129 26.60702 26.24765 #> Valiant            19.31886 19.25259 19.62832 18.16273 18.95237 18.46365 #> Merc 450SL         16.93349 16.22702 16.51487 16.30560 15.99039 16.78384 #> Cadillac Fleetwood 15.25452 10.49457  9.20809 14.48676 11.15916 10.84713 #> Fiat 128           26.43830 28.50732 28.77371 26.10899 26.96336 26.91782 #> Honda Civic        26.87886 30.74136 30.49723 26.90419 31.45783 28.76560 #> Dodge Challenger   17.83798 17.34582 16.74411 17.13403 15.41781 17.74849 #> Pontiac Firebird   17.11308 15.85502 15.42925 16.31782 18.38423 16.51413 #> Lotus Europa       24.14958 30.28063 28.02049 24.28187 21.99687 26.41043 #> Volvo 142E         25.22609 25.83736 26.46071 24.68749 28.13320 24.73446 #>                       boot7    boot8     boot9   boot10    boot11   boot12 #> Datsun 710         24.61039 28.64636 26.635321 25.07470 27.509441 26.37090 #> Valiant            20.25044 18.08213 16.288637 22.53741 20.451600 18.40653 #> Merc 450SL         16.18316 16.16138 15.420547 18.35019 15.166961 15.90008 #> Cadillac Fleetwood 12.73186 11.37235  6.940375 16.06822  6.611105 11.86962 #> Fiat 128           25.14222 29.28533 27.644836 29.55036 29.976760 26.60141 #> Honda Civic        25.05228 30.89287 31.903280 30.19602 32.923024 32.44291 #> Dodge Challenger   15.35337 16.62442 17.716426 16.45509 14.149780 20.61464 #> Pontiac Firebird   14.03930 15.62940 16.239658 17.14884 13.112432 22.16396 #> Lotus Europa       22.48165 29.53410 27.116031 22.04963 28.871233 22.13981 #> Volvo 142E         23.62505 27.16040 26.023514 23.93835 24.736461 27.81858 #>                       boot13   boot14   boot15   boot16   boot17   boot18 #> Datsun 710         32.879890 25.39206 25.20000 30.37092 26.68028 25.66602 #> Valiant            10.163944 20.03394 20.11671 20.52895 20.54104 21.06293 #> Merc 450SL         15.742615 14.85100 15.74687 17.52370 15.63273 16.96151 #> Cadillac Fleetwood 11.309608 13.16988 11.33579 11.95542 11.23321 14.98832 #> Fiat 128           33.131798 26.88801 25.81619 31.36182 27.90918 26.47960 #> Honda Civic        29.808314 29.59474 27.13959 32.27397 29.32687 27.35410 #> Dodge Challenger   10.600513 14.65376 16.57876 18.11219 15.48427 17.93187 #> Pontiac Firebird    9.154091 14.67701 15.59748 16.75798 14.81197 16.99336 #> Lotus Europa       20.886887 26.64650 26.46393 29.79577 27.63564 25.57967 #> Volvo 142E         29.014826 25.55282 24.08806 28.32066 25.39952 24.84718 #>                      boot19   boot20 #> Datsun 710         26.27816 25.31357 #> Valiant            17.47877 19.43707 #> Merc 450SL         15.64247 16.84709 #> Cadillac Fleetwood 10.17352 13.64145 #> Fiat 128           26.29546 25.81236 #> Honda Civic        28.04138 27.08909 #> Dodge Challenger   16.71929 17.55060 #> Pontiac Firebird   16.24189 16.67222 #> Lotus Europa       24.80075 26.68884 #> Volvo 142E         25.13961 24.26064  ## Alternal Matrix Interface  # Train model set.seed(123) bolasso_mat <- bolasso(   x = model.matrix(mpg ~ . - 1, mtcars_train),   y = mtcars_train[, 1],   data = mtcars_train,   n.boot = 20,   nfolds = 5,   implement = \"glmnet\" )  # Extract selected variables selected_vars(bolasso_mat, threshold = 0.9, select = \"lambda.min\") #> # A tibble: 1 × 2 #>   variable  mean_coef #>   <chr>         <dbl> #> 1 Intercept      19.4  # Bagged ensemble prediction on test data predict(bolasso_mat,         new.data = model.matrix(mpg ~ . - 1, mtcars_test),         select = \"lambda.min\") #>                       boot1    boot2    boot3    boot4    boot5    boot6 #> Datsun 710         25.65541 27.71719 27.91953 25.42129 26.60702 26.24765 #> Valiant            19.31886 19.25259 19.62832 18.16273 18.95237 18.46365 #> Merc 450SL         16.93349 16.22702 16.51487 16.30560 15.99039 16.78384 #> Cadillac Fleetwood 15.25452 10.49457  9.20809 14.48676 11.15916 10.84713 #> Fiat 128           26.43830 28.50732 28.77371 26.10899 26.96336 26.91782 #> Honda Civic        26.87886 30.74136 30.49723 26.90419 31.45783 28.76560 #> Dodge Challenger   17.83798 17.34582 16.74411 17.13403 15.41781 17.74849 #> Pontiac Firebird   17.11308 15.85502 15.42925 16.31782 18.38423 16.51413 #> Lotus Europa       24.14958 30.28063 28.02049 24.28187 21.99687 26.41043 #> Volvo 142E         25.22609 25.83736 26.46071 24.68749 28.13320 24.73446 #>                       boot7    boot8     boot9   boot10    boot11   boot12 #> Datsun 710         24.61039 28.64636 26.635321 25.07470 27.509441 26.37090 #> Valiant            20.25044 18.08213 16.288637 22.53741 20.451600 18.40653 #> Merc 450SL         16.18316 16.16138 15.420547 18.35019 15.166961 15.90008 #> Cadillac Fleetwood 12.73186 11.37235  6.940375 16.06822  6.611105 11.86962 #> Fiat 128           25.14222 29.28533 27.644836 29.55036 29.976760 26.60141 #> Honda Civic        25.05228 30.89287 31.903280 30.19602 32.923024 32.44291 #> Dodge Challenger   15.35337 16.62442 17.716426 16.45509 14.149780 20.61464 #> Pontiac Firebird   14.03930 15.62940 16.239658 17.14884 13.112432 22.16396 #> Lotus Europa       22.48165 29.53410 27.116031 22.04963 28.871233 22.13981 #> Volvo 142E         23.62505 27.16040 26.023514 23.93835 24.736461 27.81858 #>                       boot13   boot14   boot15   boot16   boot17   boot18 #> Datsun 710         32.879890 25.39206 25.20000 30.37092 26.68028 25.66602 #> Valiant            10.163944 20.03394 20.11671 20.52895 20.54104 21.06293 #> Merc 450SL         15.742615 14.85100 15.74687 17.52370 15.63273 16.96151 #> Cadillac Fleetwood 11.309608 13.16988 11.33579 11.95542 11.23321 14.98832 #> Fiat 128           33.131798 26.88801 25.81619 31.36182 27.90918 26.47960 #> Honda Civic        29.808314 29.59474 27.13959 32.27397 29.32687 27.35410 #> Dodge Challenger   10.600513 14.65376 16.57876 18.11219 15.48427 17.93187 #> Pontiac Firebird    9.154091 14.67701 15.59748 16.75798 14.81197 16.99336 #> Lotus Europa       20.886887 26.64650 26.46393 29.79577 27.63564 25.57967 #> Volvo 142E         29.014826 25.55282 24.08806 28.32066 25.39952 24.84718 #>                      boot19   boot20 #> Datsun 710         26.27816 25.31357 #> Valiant            17.47877 19.43707 #> Merc 450SL         15.64247 16.84709 #> Cadillac Fleetwood 10.17352 13.64145 #> Fiat 128           26.29546 25.81236 #> Honda Civic        28.04138 27.08909 #> Dodge Challenger   16.71929 17.55060 #> Pontiac Firebird   16.24189 16.67222 #> Lotus Europa       24.80075 26.68884 #> Volvo 142E         25.13961 24.26064"},{"path":"/reference/selected_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Bolasso-selected Variables — selected_vars","title":"Bolasso-selected Variables — selected_vars","text":"Identifies independent variables selected Bolasso algorithm least fraction time specified user-defined threshold. typical value threshold 0.9 typically lower .","code":""},{"path":"/reference/selected_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bolasso-selected Variables — selected_vars","text":"","code":"selected_vars(object, threshold = 0.9, summarise = TRUE, ...)"},{"path":"/reference/selected_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bolasso-selected Variables — selected_vars","text":"object object class bolasso. threshold numeric 0 1, specifying fraction bootstrap replicates Lasso must select variable considered selected variable. summarise Boolean indicator FALSE indicates returning full set coefficients selected variable/bootstrap replicate level TRUE indicates taking average variable's coefficient across bootstrap replicates. default value TRUE efficient interpretable. ... Additional arguments pass predict objects class cv.glmnet cv.gamlr.","code":""},{"path":"/reference/selected_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bolasso-selected Variables — selected_vars","text":"tibble selected variable respective coefficient bootstrap replicate.","code":""},{"path":[]}]
