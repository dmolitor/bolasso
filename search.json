[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 bolasso authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Molitor. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Molitor D (2021). bolasso: Model Consistent Lasso Estimation Bootstrap. R package version 0.1.0, https://dmolitor.github.io/bolasso/.","code":"@Manual{,   title = {bolasso: Model Consistent Lasso Estimation Through the Bootstrap},   author = {Daniel Molitor},   year = {2021},   note = {R package version 0.1.0},   url = {https://dmolitor.github.io/bolasso/}, }"},{"path":"/index.html","id":"bolasso-","dir":"","previous_headings":"","what":"Model Consistent Lasso Estimation Through the Bootstrap","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"goal bolasso implement model-consistent Lasso estimation via bootstrap [1].","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"dmolitor/bolasso\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"illustrate usage bolasso, ’ll use Pima Indians Diabetes dataset determine factors important predictors testing positive diabetes. full description input variables, see link .","code":""},{"path":"/index.html","id":"load-requisite-packages-and-data","dir":"","previous_headings":"Usage","what":"Load requisite packages and data","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"First, run 100-fold bootstrapped Lasso glmnet implementation. can get rough estimate elapsed time using system.time(). can get quick overview model printing bolasso object.","code":"library(bolasso)  data(PimaIndiansDiabetes, package = \"mlbench\")  # Quick overview of the dataset str(PimaIndiansDiabetes) #> 'data.frame':    768 obs. of  9 variables: #>  $ pregnant: num  6 1 8 1 0 5 3 10 2 8 ... #>  $ glucose : num  148 85 183 89 137 116 78 115 197 125 ... #>  $ pressure: num  72 66 64 66 40 74 50 0 70 96 ... #>  $ triceps : num  35 29 0 23 35 0 32 0 45 0 ... #>  $ insulin : num  0 0 0 94 168 0 88 0 543 0 ... #>  $ mass    : num  33.6 26.6 23.3 28.1 43.1 25.6 31 35.3 30.5 0 ... #>  $ pedigree: num  0.627 0.351 0.672 0.167 2.288 ... #>  $ age     : num  50 31 32 21 33 30 26 29 53 54 ... #>  $ diabetes: Factor w/ 2 levels \"neg\",\"pos\": 2 1 2 1 2 1 2 1 2 2 ... system.time({   model <- bolasso(     diabetes ~ .,     data = PimaIndiansDiabetes,     n.boot = 100,      implement = \"glmnet\",     family = \"binomial\"   ) }) #> Loaded glmnet 4.1-3 #>    user  system elapsed  #>   42.32    0.11   43.00 model #> ------------- 100-fold bootstrapped Lasso ------------- #>  #> Model matrix dimensions: #>    - 8 Predictors #>    - 768 Observations #>  #> Selected variables: #>    - 6/8 predictors selected with 90% threshold #>    - 4/8 predictors selected with 100% threshold"},{"path":"/index.html","id":"extracting-selected-variables","dir":"","previous_headings":"Usage","what":"Extracting selected variables","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"Next, can extract variables selected 90% 100% bootstrapped Lasso models. can also pass relevant arguments predict cv.glmnet cv.gamlr model objects. case use lambda value minimizes OOS error.","code":"selected_vars(model,               threshold = 0.9,               select = \"lambda.min\") #> # A tibble: 7 x 2 #>   variable  mean_coef #>   <chr>         <dbl> #> 1 Intercept   -8.15   #> 2 pregnant     0.119  #> 3 glucose      0.0348 #> 4 pressure    -0.0113 #> 5 mass         0.0821 #> 6 pedigree     0.849  #> 7 age          0.0138  selected_vars(model,               threshold = 1,               select = \"lambda.min\") #> # A tibble: 5 x 2 #>   variable  mean_coef #>   <chr>         <dbl> #> 1 Intercept   -8.15   #> 2 pregnant     0.119  #> 3 glucose      0.0348 #> 4 mass         0.0821 #> 5 pedigree     0.849"},{"path":"/index.html","id":"plotting-selected-variables","dir":"","previous_headings":"Usage","what":"Plotting selected variables","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"can also quickly plot selected variables 90% 100% threshold values.","code":"plot(model, threshold = 0.9) plot(model, threshold = 1)"},{"path":"/index.html","id":"parallelizing-bolasso","dir":"","previous_headings":"Usage","what":"Parallelizing bolasso","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"can execute bolasso parallel via future package. can copy code one minor tweak shown . can now run code , unaltered, execute parallel.","code":"future::plan(\"multisession\") system.time({   model <- bolasso(     diabetes ~ .,     data = PimaIndiansDiabetes,     n.boot = 100,      implement = \"glmnet\",     family = \"binomial\"   ) }) #>    user  system elapsed  #>    0.17    0.02    5.56"},{"path":"/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"[1] Bach, Francis. “Bolasso: Model Consistent Lasso Estimation Bootstrap.” ArXiv:0804.1302 [Cs, Math, Stat], April 8, 2008. https://arxiv.org/abs/0804.1302.","code":""},{"path":"/reference/bolasso.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootsrap-enhanced Lasso — bolasso","title":"Bootsrap-enhanced Lasso — bolasso","text":"function implements model-consistent Lasso estimation bootstrap. supports parallel processing way future package, allowing user flexibly specify many parallelization methods. method developed variable-selection algorithm, package also supports making ensemble predictions new data using bagged Lasso models.","code":""},{"path":"/reference/bolasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootsrap-enhanced Lasso — bolasso","text":"","code":"bolasso(   form,   data,   n.boot = 100,   progress = TRUE,   implement = \"glmnet\",   x = NULL,   y = NULL,   ... )"},{"path":"/reference/bolasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootsrap-enhanced Lasso — bolasso","text":"form optional object class formula (one can coerced class): symbolic description model fitted. Can omitted x y non-missing. data optional object class data.frame contains modeling variables referenced form. Can omitted x y non-missing. n.boot integer specifying number bootstrap replicates. progress boolean indicating whether display progress across bootstrap folds. implement character; either 'glmnet' 'gamlr', specifying Lasso implementation utilize. specific modeling details, see glmnet::cv.glmnet gamlr::cv.gamlr. x optional predictor matrix lieu form data. y optional response vector lieu form data. ... Additional parameters pass either glmnet::cv.glmnet gamlr::cv.gamlr.","code":""},{"path":"/reference/bolasso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootsrap-enhanced Lasso — bolasso","text":"object class bolasso. object list length n.boot cv.glmnet cv.gamlr objects.","code":""},{"path":"/reference/bolasso.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bootsrap-enhanced Lasso — bolasso","text":"Bach FR (2008). “Bolasso: model consistent Lasso estimation bootstrap.” CoRR, abs/0804.1302. 0804.1302, https://arxiv.org/abs/0804.1302.","code":""},{"path":[]},{"path":"/reference/bolasso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootsrap-enhanced Lasso — bolasso","text":"","code":"mtcars[, c(2, 10:11)] <- lapply(mtcars[, c(2, 10:11)], as.factor) idx <- sample(nrow(mtcars), 22) mtcars_train <- mtcars[idx, ] mtcars_test <- mtcars[-idx, ]  ## Formula Interface  # Train model set.seed(123) bolasso_form <- bolasso(   form = mpg ~ .,   data = mtcars_train,   n.boot = 20,   nfolds = 5,   implement = \"glmnet\" ) #> Loaded glmnet 4.1-3  # Extract selected variables selected_vars(bolasso_form, threshold = 0.9, select = \"lambda.min\") #> # A tibble: 1 × 2 #>   variable  mean_coef #>   <chr>         <dbl> #> 1 Intercept      20.6  # Bagged ensemble prediction on test data predict(bolasso_form,         new.data = mtcars_test,         select = \"lambda.min\") #>                     boot1    boot2    boot3    boot4    boot5    boot6    boot7 #> Datsun 710       27.31744 35.30460 22.56104 24.94733 28.11741 24.65981 25.12225 #> Hornet 4 Drive   17.68265 21.99839 18.41801 19.68089 17.78921 19.03875 19.16741 #> Valiant          17.41601 21.54064 18.48137 18.78526 17.53842 17.88850 18.22299 #> Fiat 128         29.45379 33.60626 23.13963 26.11077 29.53927 25.81841 25.89131 #> Dodge Challenger 15.29591 16.21312 16.48303 16.87129 15.33608 17.10574 17.51063 #> Pontiac Firebird 14.09309 18.18344 15.14067 15.07250 14.02199 16.78481 15.92861 #> Fiat X1-9        30.01751 33.54975 23.45426 27.22857 30.08845 26.36628 26.96912 #> Porsche 914-2    19.85540 21.60146 23.17706 25.36662 21.95092 26.36064 24.92076 #> Ford Pantera L   18.01434 21.60653 16.93380 16.83211 16.39334 19.43155 17.74771 #> Ferrari Dino     15.35453 29.42953 20.22788 20.04708 16.52064 20.21708 20.30083 #>                     boot8    boot9   boot10   boot11    boot12   boot13 #> Datsun 710       30.48082 25.88657 29.13457 27.53030 32.775602 23.24962 #> Hornet 4 Drive   21.64802 18.88601 18.13170 20.46104 15.958540 19.48611 #> Valiant          21.64802 17.89146 17.52773 20.19147 15.113695 18.64267 #> Fiat 128         30.48082 26.82911 30.06774 28.51041 33.414104 24.86015 #> Dodge Challenger 16.81288 18.23924 16.49061 18.67685  9.764226 17.65523 #> Pontiac Firebird 16.81288 16.43075 15.76034 17.10994  9.517604 16.81455 #> Fiat X1-9        30.48082 27.98849 30.47069 29.06260 33.676636 25.30901 #> Porsche 914-2    25.22793 25.79840 30.19871 27.90191 29.466284 30.58344 #> Ford Pantera L   20.97459 18.61680 17.89895 16.65995 20.167448 19.96676 #> Ferrari Dino     23.86654 20.43695 19.63554 21.35871 22.607166 24.22750 #>                    boot14   boot15    boot16    boot17   boot18   boot19 #> Datsun 710       28.97178 26.08649 26.556876 33.043373 28.54322 24.09434 #> Hornet 4 Drive   18.30869 21.20926  7.213108 18.640396 19.98645 17.36297 #> Valiant          17.72828 20.66452  1.746347 17.795677 19.37794 16.68577 #> Fiat 128         29.90905 27.30683 28.227967 32.942777 29.36361 24.74215 #> Dodge Challenger 14.36743 19.02695 10.553663 16.594709 16.03645 16.14649 #> Pontiac Firebird 13.40772 17.28010 15.154103 17.617337 14.66817 15.52967 #> Fiat X1-9        30.43328 28.07116 28.833386 33.067162 30.11772 25.24896 #> Porsche 914-2    27.41566 26.66295 40.760130  8.537459 26.71836 23.13089 #> Ford Pantera L   17.60965 17.26113 32.236810  5.802800 17.75464 17.48860 #> Ferrari Dino     19.86385 21.29655 22.586980 10.310645 20.47154 18.57458 #>                    boot20 #> Datsun 710       32.48084 #> Hornet 4 Drive   12.52993 #> Valiant          12.00595 #> Fiat 128         32.85745 #> Dodge Challenger 15.62167 #> Pontiac Firebird 16.14566 #> Fiat X1-9        32.85745 #> Porsche 914-2    22.25654 #> Ford Pantera L   13.32996 #> Ferrari Dino     12.06990  ## Alternal Matrix Interface  # Train model set.seed(123) bolasso_mat <- bolasso(   x = model.matrix(mpg ~ . - 1, mtcars_train),   y = mtcars_train[, 1],   data = mtcars_train,   n.boot = 20,   nfolds = 5,   implement = \"glmnet\" )  # Extract selected variables selected_vars(bolasso_mat, threshold = 0.9, select = \"lambda.min\") #> # A tibble: 1 × 2 #>   variable  mean_coef #>   <chr>         <dbl> #> 1 Intercept      20.6  # Bagged ensemble prediction on test data predict(bolasso_mat,         new.data = model.matrix(mpg ~ . - 1, mtcars_test),         select = \"lambda.min\") #>                     boot1    boot2    boot3    boot4    boot5    boot6    boot7 #> Datsun 710       27.31744 35.30460 22.56104 24.94733 28.11741 24.65981 25.12225 #> Hornet 4 Drive   17.68265 21.99839 18.41801 19.68089 17.78921 19.03875 19.16741 #> Valiant          17.41601 21.54064 18.48137 18.78526 17.53842 17.88850 18.22299 #> Fiat 128         29.45379 33.60626 23.13963 26.11077 29.53927 25.81841 25.89131 #> Dodge Challenger 15.29591 16.21312 16.48303 16.87129 15.33608 17.10574 17.51063 #> Pontiac Firebird 14.09309 18.18344 15.14067 15.07250 14.02199 16.78481 15.92861 #> Fiat X1-9        30.01751 33.54975 23.45426 27.22857 30.08845 26.36628 26.96912 #> Porsche 914-2    19.85540 21.60146 23.17706 25.36662 21.95092 26.36064 24.92076 #> Ford Pantera L   18.01434 21.60653 16.93380 16.83211 16.39334 19.43155 17.74771 #> Ferrari Dino     15.35453 29.42953 20.22788 20.04708 16.52064 20.21708 20.30083 #>                     boot8    boot9   boot10   boot11    boot12   boot13 #> Datsun 710       30.48082 25.88657 29.13457 27.53030 32.775602 23.24962 #> Hornet 4 Drive   21.64802 18.88601 18.13170 20.46104 15.958540 19.48611 #> Valiant          21.64802 17.89146 17.52773 20.19147 15.113695 18.64267 #> Fiat 128         30.48082 26.82911 30.06774 28.51041 33.414104 24.86015 #> Dodge Challenger 16.81288 18.23924 16.49061 18.67685  9.764226 17.65523 #> Pontiac Firebird 16.81288 16.43075 15.76034 17.10994  9.517604 16.81455 #> Fiat X1-9        30.48082 27.98849 30.47069 29.06260 33.676636 25.30901 #> Porsche 914-2    25.22793 25.79840 30.19871 27.90191 29.466284 30.58344 #> Ford Pantera L   20.97459 18.61680 17.89895 16.65995 20.167448 19.96676 #> Ferrari Dino     23.86654 20.43695 19.63554 21.35871 22.607166 24.22750 #>                    boot14   boot15    boot16    boot17   boot18   boot19 #> Datsun 710       28.97178 26.08649 26.556876 33.043373 28.54322 24.09434 #> Hornet 4 Drive   18.30869 21.20926  7.213108 18.640396 19.98645 17.36297 #> Valiant          17.72828 20.66452  1.746347 17.795677 19.37794 16.68577 #> Fiat 128         29.90905 27.30683 28.227967 32.942777 29.36361 24.74215 #> Dodge Challenger 14.36743 19.02695 10.553663 16.594709 16.03645 16.14649 #> Pontiac Firebird 13.40772 17.28010 15.154103 17.617337 14.66817 15.52967 #> Fiat X1-9        30.43328 28.07116 28.833386 33.067162 30.11772 25.24896 #> Porsche 914-2    27.41566 26.66295 40.760130  8.537459 26.71836 23.13089 #> Ford Pantera L   17.60965 17.26113 32.236810  5.802800 17.75464 17.48860 #> Ferrari Dino     19.86385 21.29655 22.586980 10.310645 20.47154 18.57458 #>                    boot20 #> Datsun 710       32.48084 #> Hornet 4 Drive   12.52993 #> Valiant          12.00595 #> Fiat 128         32.85745 #> Dodge Challenger 15.62167 #> Pontiac Firebird 16.14566 #> Fiat X1-9        32.85745 #> Porsche 914-2    22.25654 #> Ford Pantera L   13.32996 #> Ferrari Dino     12.06990"},{"path":"/reference/selected_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Bolasso-selected Variables — selected_vars","title":"Bolasso-selected Variables — selected_vars","text":"Identifies independent variables selected Bolasso algorithm least fraction time specified user-defined threshold. typical value threshold 0.9 typically lower .","code":""},{"path":"/reference/selected_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bolasso-selected Variables — selected_vars","text":"","code":"selected_vars(object, threshold = 0.9, summarise = TRUE, ...)"},{"path":"/reference/selected_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bolasso-selected Variables — selected_vars","text":"object object class bolasso. threshold numeric 0 1, specifying fraction bootstrap replicates Lasso must select variable considered selected variable. summarise Boolean indicator FALSE indicates returning full set coefficients selected variable/bootstrap replicate level TRUE indicates taking average variable's coefficient across bootstrap replicates. default value TRUE efficient interpretable. ... Additional arguments pass predict objects class cv.glmnet cv.gamlr.","code":""},{"path":"/reference/selected_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bolasso-selected Variables — selected_vars","text":"tibble selected variable respective coefficient bootstrap replicate.","code":""},{"path":[]}]
