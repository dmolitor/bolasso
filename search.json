[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 bolasso authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Molitor. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Molitor D (2022). bolasso: Model Consistent Lasso Estimation Bootstrap. R package version 0.1.0, https://dmolitor.github.io/bolasso/.","code":"@Manual{,   title = {bolasso: Model Consistent Lasso Estimation Through the Bootstrap},   author = {Daniel Molitor},   year = {2022},   note = {R package version 0.1.0},   url = {https://dmolitor.github.io/bolasso/}, }"},{"path":"/index.html","id":"bolasso-","dir":"","previous_headings":"","what":"Model Consistent Lasso Estimation Through the Bootstrap","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"goal bolasso implement model-consistent Lasso estimation via bootstrap [1].","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"dmolitor/bolasso\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"illustrate usage bolasso, ’ll use Pima Indians Diabetes dataset determine factors important predictors testing positive diabetes. full description input variables, see link .","code":""},{"path":"/index.html","id":"load-requisite-packages-and-data","dir":"","previous_headings":"Usage","what":"Load requisite packages and data","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"First, run 100-fold bootstrapped Lasso glmnet implementation. can get rough estimate elapsed time using system.time(). can get quick overview model printing bolasso object.","code":"library(bolasso)  data(PimaIndiansDiabetes, package = \"mlbench\")  # Quick overview of the dataset str(PimaIndiansDiabetes) #> 'data.frame':    768 obs. of  9 variables: #>  $ pregnant: num  6 1 8 1 0 5 3 10 2 8 ... #>  $ glucose : num  148 85 183 89 137 116 78 115 197 125 ... #>  $ pressure: num  72 66 64 66 40 74 50 0 70 96 ... #>  $ triceps : num  35 29 0 23 35 0 32 0 45 0 ... #>  $ insulin : num  0 0 0 94 168 0 88 0 543 0 ... #>  $ mass    : num  33.6 26.6 23.3 28.1 43.1 25.6 31 35.3 30.5 0 ... #>  $ pedigree: num  0.627 0.351 0.672 0.167 2.288 ... #>  $ age     : num  50 31 32 21 33 30 26 29 53 54 ... #>  $ diabetes: Factor w/ 2 levels \"neg\",\"pos\": 2 1 2 1 2 1 2 1 2 2 ... system.time({   model <- bolasso(     diabetes ~ .,     data = PimaIndiansDiabetes,     n.boot = 100,      implement = \"glmnet\",     family = \"binomial\"   ) }) #> Loaded glmnet 4.1-3 #>    user  system elapsed  #>   42.32    0.11   43.00 model #> ------------- 100-fold bootstrapped Lasso ------------- #>  #> Model matrix dimensions: #>    - 8 Predictors #>    - 768 Observations #>  #> Selected variables: #>    - 6/8 predictors selected with 90% threshold #>    - 4/8 predictors selected with 100% threshold"},{"path":"/index.html","id":"extracting-selected-variables","dir":"","previous_headings":"Usage","what":"Extracting selected variables","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"Next, can extract variables selected 90% 100% bootstrapped Lasso models. can also pass relevant arguments predict cv.glmnet cv.gamlr model objects. case use lambda value minimizes OOS error.","code":"selected_vars(model,               threshold = 0.9,               select = \"lambda.min\") #> # A tibble: 7 x 2 #>   variable  mean_coef #>   <chr>         <dbl> #> 1 Intercept   -8.15   #> 2 pregnant     0.119  #> 3 glucose      0.0348 #> 4 pressure    -0.0113 #> 5 mass         0.0821 #> 6 pedigree     0.849  #> 7 age          0.0138  selected_vars(model,               threshold = 1,               select = \"lambda.min\") #> # A tibble: 5 x 2 #>   variable  mean_coef #>   <chr>         <dbl> #> 1 Intercept   -8.15   #> 2 pregnant     0.119  #> 3 glucose      0.0348 #> 4 mass         0.0821 #> 5 pedigree     0.849"},{"path":"/index.html","id":"plotting-selected-variables","dir":"","previous_headings":"Usage","what":"Plotting selected variables","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"can also quickly plot selected variables 90% 100% threshold values.","code":"plot(model, threshold = 0.9) plot(model, threshold = 1)"},{"path":"/index.html","id":"parallelizing-bolasso","dir":"","previous_headings":"Usage","what":"Parallelizing bolasso","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"can execute bolasso parallel via future package. can copy code one minor tweak shown . can now run code , unaltered, execute parallel.","code":"future::plan(\"multisession\") system.time({   model <- bolasso(     diabetes ~ .,     data = PimaIndiansDiabetes,     n.boot = 100,      implement = \"glmnet\",     family = \"binomial\"   ) }) #>    user  system elapsed  #>    0.17    0.02    5.56"},{"path":"/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Model Consistent Lasso Estimation Through the Bootstrap","text":"[1] Bach, Francis. “Bolasso: Model Consistent Lasso Estimation Bootstrap.” ArXiv:0804.1302 [Cs, Math, Stat], April 8, 2008. https://arxiv.org/abs/0804.1302.","code":""},{"path":"/reference/bolasso.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootsrap-enhanced Lasso — bolasso","title":"Bootsrap-enhanced Lasso — bolasso","text":"function implements model-consistent Lasso estimation bootstrap. supports parallel processing way future package, allowing user flexibly specify many parallelization methods. method developed variable-selection algorithm, package also supports making ensemble predictions new data using bagged Lasso models.","code":""},{"path":"/reference/bolasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootsrap-enhanced Lasso — bolasso","text":"","code":"bolasso(   form,   data,   n.boot = 100,   progress = TRUE,   implement = \"glmnet\",   x = NULL,   y = NULL,   ... )"},{"path":"/reference/bolasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootsrap-enhanced Lasso — bolasso","text":"form optional object class formula (one can coerced class): symbolic description model fitted. Can omitted x y non-missing. data optional object class data.frame contains modeling variables referenced form. Can omitted x y non-missing. n.boot integer specifying number bootstrap replicates. progress boolean indicating whether display progress across bootstrap folds. implement character; either 'glmnet' 'gamlr', specifying Lasso implementation utilize. specific modeling details, see glmnet::cv.glmnet gamlr::cv.gamlr. x optional predictor matrix lieu form data. y optional response vector lieu form data. ... Additional parameters pass either glmnet::cv.glmnet gamlr::cv.gamlr.","code":""},{"path":"/reference/bolasso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootsrap-enhanced Lasso — bolasso","text":"object class bolasso. object list length n.boot cv.glmnet cv.gamlr objects.","code":""},{"path":"/reference/bolasso.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bootsrap-enhanced Lasso — bolasso","text":"Bach FR (2008). “Bolasso: model consistent Lasso estimation bootstrap.” CoRR, abs/0804.1302. 0804.1302, https://arxiv.org/abs/0804.1302.","code":""},{"path":[]},{"path":"/reference/bolasso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootsrap-enhanced Lasso — bolasso","text":"","code":"mtcars[, c(2, 10:11)] <- lapply(mtcars[, c(2, 10:11)], as.factor) idx <- sample(nrow(mtcars), 22) mtcars_train <- mtcars[idx, ] mtcars_test <- mtcars[-idx, ]  ## Formula Interface  # Train model set.seed(123) bolasso_form <- bolasso(   form = mpg ~ .,   data = mtcars_train,   n.boot = 20,   nfolds = 5,   implement = \"glmnet\" ) #> Loaded glmnet 4.1-3  # Extract selected variables selected_vars(bolasso_form, threshold = 0.9, select = \"lambda.min\") #> # A tibble: 2 × 2 #>   variable  mean_coef #>   <chr>         <dbl> #> 1 Intercept     23.9  #> 2 wt            -2.80  # Bagged ensemble prediction on test data predict(bolasso_form,         new.data = mtcars_test,         select = \"lambda.min\") #>                     boot1    boot2    boot3    boot4    boot5    boot6    boot7 #> Mazda RX4        24.32901 24.21034 20.91563 21.20545 21.53248 24.83083 22.50248 #> Valiant          20.65363 21.82481 19.43796 18.06856 23.38860 18.63808 16.71835 #> Duster 360       12.82107 15.42490 13.39675 13.67175 13.96376 16.11449 14.71800 #> Merc 240D        23.85432 27.32492 21.09902 21.79485 25.81947 22.52448 22.01140 #> Merc 280         22.03263 21.80920 20.83275 18.64068 22.92831 20.40705 20.67178 #> Merc 280C        22.09024 21.89185 20.83275 19.30490 24.06370 20.40705 20.67178 #> Pontiac Firebird 14.21702 16.97009 16.02204 14.95021 14.33608 15.71402 15.44842 #> Fiat X1-9        29.00007 31.22524 22.93388 26.59674 29.19818 28.90026 25.79914 #> Ford Pantera L   14.67974 15.75559 18.81189 19.46314 19.88839 17.97249 23.65535 #> Maserati Bora     8.17903 11.92126 19.33627 16.83822 17.70453 14.95881 18.60074 #>                     boot8    boot9   boot10   boot11   boot12   boot13   boot14 #> Mazda RX4        24.53382 22.64985 21.60617 24.10523 25.48787 23.13283 24.39220 #> Valiant          21.81221 19.63185 20.46858 18.72015 21.68861 19.84277 19.93881 #> Duster 360       14.43522 16.04412 14.26196 16.31534 14.12367 16.82259 14.63875 #> Merc 240D        24.10495 18.60361 25.50321 27.03165 25.70761 21.70702 23.46948 #> Merc 280         21.19416 15.92138 20.82638 26.22539 22.46531 19.65698 22.76064 #> Merc 280C        21.19416 15.92138 20.82638 26.22539 22.46531 19.65698 22.76064 #> Pontiac Firebird 16.33217 13.42070 16.73453 16.17236 18.05692 16.66355 14.29783 #> Fiat X1-9        29.81751 33.08417 27.44534 30.61290 28.37560 27.25552 28.54190 #> Ford Pantera L   17.39372 14.22523 16.19651 21.18934 16.88868 18.32005 19.26443 #> Maserati Bora    13.72572 14.73164 12.97259 18.53552 11.61064 15.44666 18.56064 #>                    boot15   boot16   boot17   boot18   boot19   boot20 #> Mazda RX4        22.42991 21.57306 25.60223 24.71839 23.36276 22.42462 #> Valiant          12.79586 18.51480 19.82291 19.59867 18.99358 19.90148 #> Duster 360       19.77079 18.04841 22.92488 12.87120 13.55626 13.73338 #> Merc 240D        21.67654 22.23869 19.82389 23.87678 22.74378 23.86378 #> Merc 280         16.69549 18.57229 21.23633 21.31540 19.98058 21.50879 #> Merc 280C        16.69549 18.57229 21.23633 21.31540 19.98058 21.50879 #> Pontiac Firebird 15.37696 19.91437 15.08482 15.51816 15.67361 15.76164 #> Fiat X1-9        32.40950 23.95723 33.31007 28.04523 26.79976 25.51103 #> Ford Pantera L   26.06145 19.58420 26.13294 16.72805 15.84442 14.77116 #> Maserati Bora    24.54967 18.16352 22.92323 12.64562 11.38454 11.28743  ## Alternal Matrix Interface  # Train model set.seed(123) bolasso_mat <- bolasso(   x = model.matrix(mpg ~ . - 1, mtcars_train),   y = mtcars_train[, 1],   data = mtcars_train,   n.boot = 20,   nfolds = 5,   implement = \"glmnet\" )  # Extract selected variables selected_vars(bolasso_mat, threshold = 0.9, select = \"lambda.min\") #> # A tibble: 2 × 2 #>   variable  mean_coef #>   <chr>         <dbl> #> 1 Intercept     23.9  #> 2 wt            -2.80  # Bagged ensemble prediction on test data predict(bolasso_mat,         new.data = model.matrix(mpg ~ . - 1, mtcars_test),         select = \"lambda.min\") #>                     boot1    boot2    boot3    boot4    boot5    boot6    boot7 #> Mazda RX4        24.32901 24.21034 20.91563 21.20545 21.53128 24.83083 22.50248 #> Valiant          20.65363 21.82481 19.43796 18.06856 23.38921 18.63808 16.71835 #> Duster 360       12.82107 15.42490 13.39675 13.67175 13.96445 16.11449 14.71800 #> Merc 240D        23.85432 27.32492 21.09902 21.79485 25.81913 22.52448 22.01140 #> Merc 280         22.03263 21.80920 20.83275 18.64068 22.92760 20.40705 20.67178 #> Merc 280C        22.09024 21.89185 20.83275 19.30490 24.06339 20.40705 20.67178 #> Pontiac Firebird 14.21702 16.97009 16.02204 14.95021 14.33643 15.71402 15.44842 #> Fiat X1-9        29.00007 31.22524 22.93388 26.59674 29.19818 28.90026 25.79914 #> Ford Pantera L   14.67974 15.75559 18.81189 19.46314 19.88884 17.97249 23.65535 #> Maserati Bora     8.17903 11.92126 19.33627 16.83822 17.70539 14.95881 18.60074 #>                     boot8    boot9   boot10   boot11   boot12   boot13   boot14 #> Mazda RX4        24.53382 22.64985 21.60617 24.10523 25.48787 23.13283 24.39220 #> Valiant          21.81221 19.63185 20.46858 18.72015 21.68861 19.84277 19.93881 #> Duster 360       14.43522 16.04412 14.26196 16.31534 14.12367 16.82259 14.63875 #> Merc 240D        24.10495 18.60361 25.50321 27.03165 25.70761 21.70702 23.46948 #> Merc 280         21.19416 15.92138 20.82638 26.22539 22.46531 19.65698 22.76064 #> Merc 280C        21.19416 15.92138 20.82638 26.22539 22.46531 19.65698 22.76064 #> Pontiac Firebird 16.33217 13.42070 16.73453 16.17236 18.05692 16.66355 14.29783 #> Fiat X1-9        29.81751 33.08417 27.44534 30.61290 28.37560 27.25552 28.54190 #> Ford Pantera L   17.39372 14.22523 16.19651 21.18934 16.88868 18.32005 19.26443 #> Maserati Bora    13.72572 14.73164 12.97259 18.53552 11.61064 15.44666 18.56064 #>                    boot15   boot16   boot17   boot18   boot19   boot20 #> Mazda RX4        22.42991 21.57306 25.60223 24.71839 23.36276 22.42462 #> Valiant          12.79586 18.51480 19.82291 19.59867 18.99358 19.90148 #> Duster 360       19.77079 18.04841 22.92488 12.87120 13.55626 13.73338 #> Merc 240D        21.67654 22.23869 19.82389 23.87678 22.74378 23.86378 #> Merc 280         16.69549 18.57229 21.23633 21.31540 19.98058 21.50879 #> Merc 280C        16.69549 18.57229 21.23633 21.31540 19.98058 21.50879 #> Pontiac Firebird 15.37696 19.91437 15.08482 15.51816 15.67361 15.76164 #> Fiat X1-9        32.40950 23.95723 33.31007 28.04523 26.79976 25.51103 #> Ford Pantera L   26.06145 19.58420 26.13294 16.72805 15.84442 14.77116 #> Maserati Bora    24.54967 18.16352 22.92323 12.64562 11.38454 11.28743"},{"path":"/reference/selected_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Bolasso-selected Variables — selected_vars","title":"Bolasso-selected Variables — selected_vars","text":"Identifies independent variables selected Bolasso algorithm least fraction time specified user-defined threshold. typical value threshold 0.9 typically lower .","code":""},{"path":"/reference/selected_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bolasso-selected Variables — selected_vars","text":"","code":"selected_vars(object, threshold = 0.9, summarise = TRUE, ...)"},{"path":"/reference/selected_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bolasso-selected Variables — selected_vars","text":"object object class bolasso. threshold numeric 0 1, specifying fraction bootstrap replicates Lasso must select variable considered selected variable. summarise Boolean indicator FALSE indicates returning full set coefficients selected variable/bootstrap replicate level TRUE indicates taking average variable's coefficient across bootstrap replicates. default value TRUE efficient interpretable. ... Additional arguments pass predict objects class cv.glmnet cv.gamlr.","code":""},{"path":"/reference/selected_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bolasso-selected Variables — selected_vars","text":"tibble selected variable respective coefficient bootstrap replicate.","code":""},{"path":[]}]
